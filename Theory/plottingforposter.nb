(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    425129,       8060]
NotebookOptionsPosition[    418207,       7948]
NotebookOutlinePosition[    418543,       7963]
CellTagsIndexPosition[    418500,       7960]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.798739245330389*^9, 3.7987392469449472`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"14b80fc0-b034-4458-afec-bce5e94a86f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}], ",", " ", "Black"}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}], ",", "Black"}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.772409982308971*^9, 3.772410000878034*^9}, {
  3.772412054302535*^9, 3.772412056466503*^9}, {3.772412571717704*^9, 
  3.7724125748075314`*^9}, {3.798745093268732*^9, 3.798745104521298*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"7d11db7f-b6ad-428f-9f53-e0e508d5667c"],

Cell["\<\
Derive Klein-Nashina \[OpenCurlyDoubleQuote]true\[CloseCurlyDoubleQuote] \
Compton distribution over scattering angle \[Theta] = [\[Pi]/2,\[Pi]] as we \
only care about the actual edge near the maximum transferred energy\
\>", "Text",
 CellChangeTimes->{{3.772409010017479*^9, 3.7724090715554113`*^9}, {
  3.772409198163972*^9, 3.772409201129126*^9}, {3.7724092347744427`*^9, 
  3.772409248667491*^9}},ExpressionUUID->"3c7f0a2f-9122-42dd-8272-\
103642952e78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{
    TemplateBox[{"\"electron\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Particle\"", ",", "\"Electron\""}], "]"}],
      "\"Entity[\\\"Particle\\\", \\\"Electron\\\"]\"","\"particle\""},
     "Entity"], "[", 
    TemplateBox[{"\"classical radius\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Particle\"", ",", "\"ClassicalRadius\""}], "]"}],
      "\"EntityProperty[\\\"Particle\\\", \\\"ClassicalRadius\\\"]\""},
     "EntityProperty"], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7718485996166286`*^9, 3.771848613582241*^9}, 
   3.7718641198598547`*^9, 3.7718643053380413`*^9},
 CellLabel->
  "In[132]:=",ExpressionUUID->"60aea46b-e92d-4083-8b75-e18d48187343"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m0", " ", "=", " ", 
   RowBox[{
    TemplateBox[{"\"electron\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Particle\"", ",", "\"Electron\""}], "]"}],
      "\"Entity[\\\"Particle\\\", \\\"Electron\\\"]\"","\"particle\""},
     "Entity"], "[", 
    TemplateBox[{"\"mass\"",RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Particle\"", ",", "\"Mass\""}], "]"}],
      "\"EntityProperty[\\\"Particle\\\", \\\"Mass\\\"]\""},
     "EntityProperty"], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771848622603393*^9, 3.771848630156427*^9}, 
   3.771864080754159*^9, 3.771864306408718*^9},
 CellLabel->
  "In[133]:=",ExpressionUUID->"d05e36df-1241-4ecf-8641-ce73878fd250"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", " ", "=", " ", 
   TemplateBox[{
    InterpretationBox["\[InvisibleSpace]", 1],StyleBox[
     "\"c\"", Italic, StripOnInput -> False],"speed of light",
     "\"SpeedOfLight\""},
    "Quantity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.771848632832015*^9, 3.771848639565978*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"12d31311-9f97-4f75-b440-1e6bb74aa097"],

Cell["\<\
Input energy of gamma rays, currently set to 0.6617 MeV for Cesium 137 source\
\
\>", "Text",
 CellChangeTimes->{{3.77240917409499*^9, 3.7724091922644567`*^9}, {
  3.7987412165860043`*^9, 
  3.798741217579657*^9}},ExpressionUUID->"8b891f59-8681-499f-a4c2-\
d95a31786cc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"En", " ", "=", " ", 
   TemplateBox[{
    "0.6617","\"MeV\"","megaelectronvolts","\"Megaelectronvolts\""},
    "Quantity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7718486587769814`*^9, 3.771848690565742*^9}, {
  3.77184875129077*^9, 3.771848752643002*^9}, {3.771862964178581*^9, 
  3.771862980097842*^9}, {3.772409135705448*^9, 3.772409170455637*^9}, {
  3.79874118509468*^9, 3.798741213217395*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"2ff07130-5fd0-4de0-bbd3-75c5e19908bb"],

Cell["\<\
Energy of scattered electron with respect to input gamma energy and \
scattering angle \[Theta] in MeV, this is the energy that goes into the \
scintillator\
\>", "Text",
 CellChangeTimes->{{3.7724092071962*^9, 3.7724092320518713`*^9}, {
  3.772409359596322*^9, 
  3.772409369142066*^9}},ExpressionUUID->"35a3d70b-9eb8-4953-bfc3-\
72a140254d52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ene", "[", "\[Theta]_", "]"}], ":=", " ", 
  RowBox[{"En", "-", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"En", "*", "m0", "*", 
      SuperscriptBox["c", "2"]}], 
     RowBox[{
      RowBox[{"m0", "*", 
       SuperscriptBox["c", "2"]}], "+", 
      RowBox[{"En", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}]], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.771867861607338*^9, 3.771867909840468*^9}, {
   3.771867996221368*^9, 3.771868004557439*^9}, 3.771868046846642*^9, {
   3.7731647555186157`*^9, 3.773164764616795*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"dc38e9de-082a-4031-a12d-17b1d8209daf"],

Cell["Energy of the scattered gamma ray", "Text",
 CellChangeTimes->{{3.772409256407331*^9, 
  3.772409261961809*^9}},ExpressionUUID->"96517e29-e608-41c6-89ce-\
b7e68194294d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Enp", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{"En", "-", 
   RowBox[{"Ene", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"3767eb66-6917-4149-acd4-ba38022872e1"],

Cell["One of many g[\[Theta]]  (imperially defined functions) ", "Text",
 CellChangeTimes->{{3.7724092694836483`*^9, 
  3.77240930566465*^9}},ExpressionUUID->"93b9d66d-ce1f-4f50-bf64-\
6ccfc1e72aec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "\[Theta]_", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"Enp", "[", "\[Theta]", "]"}], "En"], ")"}], "2"], 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Enp", "[", "\[Theta]", "]"}], "En"], "+", 
     FractionBox["En", 
      RowBox[{"Enp", "[", "\[Theta]", "]"}]], "-", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.77184809053343*^9, 3.7718481397537613`*^9}, {
   3.771848214349856*^9, 3.771848228226952*^9}, 3.7718484303153963`*^9, 
   3.771863468282235*^9, {3.771865086232402*^9, 3.771865102811077*^9}, {
   3.771867712403105*^9, 3.7718677752773523`*^9}, {3.771869730767342*^9, 
   3.771869803096739*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"dd52f0fa-6375-4331-b49a-bd38070e35a0"],

Cell[TextData[{
 "Compton scattering cross section in ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SuperscriptBox["cm", "2"], "MeV"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "74481ca9-e473-4ea9-aae0-78392ae09438"]
}], "Text",
 CellChangeTimes->{{3.772409372201148*^9, 
  3.772409396945189*^9}},ExpressionUUID->"896c0ed1-2764-42be-a37c-\
90948b32a55c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dsEne", "[", "\[Theta]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "\[Pi]", " ", 
     SuperscriptBox["r0", "2"], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"g", "[", "\[Theta]", "]"}]}], ")"}], 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["En", 
           RowBox[{"(", 
            RowBox[{"m0", "*", 
             SuperscriptBox["c", "2"]}], ")"}]], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]}], ")"}], "2"], 
      "*", "m0", "*", 
      SuperscriptBox["c", "2"]}], 
     RowBox[{
      SuperscriptBox["En", "2"], "*", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7718479408208313`*^9, 3.771848103611332*^9}, {
   3.771848134160817*^9, 3.771848155430475*^9}, 3.771848433241935*^9, {
   3.771863407737118*^9, 3.771863409007762*^9}, 3.771863466808425*^9, 
   3.77186746196835*^9, {3.7718676412033567`*^9, 3.771867656384653*^9}, {
   3.771867768426177*^9, 3.771867773618079*^9}, {3.7718698473257504`*^9, 
   3.771869853191127*^9}, {3.773164768028399*^9, 3.77316477038594*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"ba9f2aa0-7b6d-44ce-bc65-ccb6ce98c847"],

Cell["\<\
Calculate some points from the \[OpenCurlyDoubleQuote]true\
\[CloseCurlyDoubleQuote] distribution for polynomial fitting, show max \
scattered energy and max cross section, both at the end of the plot
This max scattered energy is the theoretical ideal location for the Compton \
edge\
\>", "Text",
 CellChangeTimes->{{3.7724091012954187`*^9, 3.772409131818194*^9}, {
  3.772409411166432*^9, 3.772409434860499*^9}, {3.77240972438395*^9, 
  3.7724097378423977`*^9}},ExpressionUUID->"3b5ddf0f-69f3-4d52-8c2b-\
1eee5e25d10a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mixedpoints", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ene", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"UnitConvert", "[", 
        RowBox[{
         RowBox[{"dsEne", "[", "\[Theta]", "]"}], ",", 
         TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],RowBox[{
             SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", "\"/\"",
              "\[InvisibleSpace]", "\"MeV\""}],
           "centimeters squared per megaelectronvolt",FractionBox[
            SuperscriptBox["\"Centimeters\"", "2"], "\"Megaelectronvolts\""]},
          
          "Quantity"]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", "0.01"}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7718723708711767`*^9, 3.77187241720683*^9}, {
   3.771872448204686*^9, 3.7718724546025248`*^9}, {3.771872492245912*^9, 
   3.771872511691483*^9}, {3.771872727857292*^9, 3.771872758039109*^9}, 
   3.771930734062869*^9, {3.77238895345787*^9, 3.772388957559227*^9}, {
   3.772388998406926*^9, 3.772388999067934*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"6d7a6572-fa70-47b9-b0cc-37223f104b63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"minscatteredenergy", "=", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"Min", "[", 
    RowBox[{"mixedpoints", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7724107054049597`*^9, 3.772410714634778*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"73f25114-9860-4d61-bd6d-809b2bbb6235"],

Cell[BoxData["0.3733668316630884`"], "Output",
 CellChangeTimes->{3.772410715012882*^9, 3.7724107625487022`*^9, 
  3.77241601325695*^9, 3.773165868655979*^9, 3.774192576661376*^9, 
  3.775844739042955*^9, 3.7760490919817677`*^9, 3.798739254473051*^9, 
  3.798741226915362*^9, 3.798744813987343*^9, 3.798745114238242*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"004af7dd-f650-487b-9f42-a076e9d038cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxscatteredenergy", " ", "=", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"Max", "[", 
    RowBox[{"mixedpoints", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7722169432611017`*^9, 3.772216944910659*^9}, {
  3.772216981397262*^9, 3.772216985399001*^9}, {3.772217020428183*^9, 
  3.7722170940393677`*^9}, {3.772217700241521*^9, 3.772217707427415*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"bd902d78-a6aa-4f9c-80eb-d8865e6ef882"],

Cell[BoxData["0.47737366137794246`"], "Output",
 CellChangeTimes->{
  3.772216945241108*^9, {3.772217058372294*^9, 3.772217094454561*^9}, 
   3.772217707788046*^9, 3.77227820455098*^9, 3.772281372425486*^9, 
   3.7723887486819267`*^9, 3.772388802973034*^9, 3.7723888398105803`*^9, 
   3.7723889651157093`*^9, 3.772389795578354*^9, 3.772390366396476*^9, 
   3.772410762565816*^9, 3.772416013269165*^9, 3.773165868669709*^9, 
   3.774192576678382*^9, 3.775844739053649*^9, 3.776049091991991*^9, 
   3.798739254487007*^9, 3.798741226927032*^9, 3.798744813996373*^9, 
   3.798745114249041*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"ff844b86-9b1d-41b2-9c06-a87c5709b79e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxcrosssection", " ", "=", " ", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"Max", "[", 
    RowBox[{"mixedpoints", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772218718506765*^9, 3.7722187187366877`*^9}, {
  3.7722187544737577`*^9, 3.772218784650558*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"786795dd-5155-49c6-962d-70fe36ee21ad"],

Cell[BoxData["1.1262680895601734`*^-24"], "Output",
 CellChangeTimes->{3.7722187862109137`*^9, 3.7722782045617037`*^9, 
  3.772281372435212*^9, 3.772388748698007*^9, 3.772388802986699*^9, 
  3.772388839824841*^9, 3.772388966590427*^9, 3.772389795590846*^9, 
  3.77239036641858*^9, 3.772410762619091*^9, 3.7724160133187037`*^9, 
  3.773165868905589*^9, 3.7741925767387047`*^9, 3.775844739093278*^9, 
  3.776049092035676*^9, 3.79873925454078*^9, 3.798741226967518*^9, 
  3.798744814041877*^9, 3.798745114305078*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"de23d42a-c956-42cc-b93f-6b112522288a"]
}, Open  ]],

Cell["\<\
Setup simple 2nd order polynomial piecewise model to represent ideal Compton \
edge\
\>", "Text",
 CellChangeTimes->{{3.7724094438777657`*^9, 
  3.772409475566772*^9}},ExpressionUUID->"51425333-8dec-4c73-b9d9-\
c98989a4db3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"modelr", "[", "en_", "]"}], " ", "=", " ", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           RowBox[{"a1", "*", 
            SuperscriptBox["en", "2"]}], "+", 
           RowBox[{"b1", "*", "en"}], "+", "c1"}], 
          RowBox[{"en", "<=", "enc"}]},
         {"0", 
          RowBox[{"en", ">", "enc"}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.7722813828025227`*^9, 3.772281427975326*^9}, {
   3.772281467474791*^9, 3.772281510087998*^9}, {3.772281689487994*^9, 
   3.772281735614072*^9}, 3.772282143178527*^9, {3.7722832656775293`*^9, 
   3.772283267234858*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"41b8c10c-1920-4d68-afe0-8ff8b76d0eef"],

Cell["\<\
For ease of fitting, use a normal 2nd order polynomial to get coefficients\
\>", "Text",
 CellChangeTimes->{{3.772409496682925*^9, 3.7724095082278957`*^9}, {
  3.77240965115903*^9, 
  3.772409656630831*^9}},ExpressionUUID->"54d419b6-06e8-46df-8035-\
b0d26177310c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"twodpoly", " ", "=", " ", 
   RowBox[{
    RowBox[{"a1", "*", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b1", "*", "x"}], "+", "c1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771872826584001*^9, 3.771872844816431*^9}, {
   3.77187288822506*^9, 3.771872891092863*^9}, 3.77193077453913*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"c7688aea-25e5-48f3-8a3a-389455252381"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitparams", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{
    RowBox[{"QuantityMagnitude", "[", "mixedpoints", "]"}], ",", "twodpoly", 
    ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "b1", ",", "c1"}], "}"}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.771872859256631*^9, 3.771872895228978*^9}, {
  3.771872993000153*^9, 3.771873000371043*^9}, {3.771932665496834*^9, 
  3.771932668135353*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"14dcea33-8d92-4647-bac2-020216051aa9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a1", "\[Rule]", "5.789121269622872`*^-23"}], ",", 
   RowBox[{"b1", "\[Rule]", 
    RowBox[{"-", "4.3597447556414926`*^-23"}]}], ",", 
   RowBox[{"c1", "\[Rule]", "8.736258116598735`*^-24"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7722172691435738`*^9, 3.772278205457255*^9, 
  3.772281372632882*^9, 3.772388749130919*^9, 3.7723888032273903`*^9, 
  3.772388840063628*^9, 3.7723897958968153`*^9, 3.772390366666182*^9, 
  3.772410762697363*^9, 3.772416013397233*^9, 3.7731658691311207`*^9, 
  3.774192576976428*^9, 3.7758447393292637`*^9, 3.776049092268982*^9, 
  3.798739254712639*^9, 3.798741227032064*^9, 3.7987448141148767`*^9, 
  3.7987451143812943`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"5e98bee3-6560-4a74-9b81-1d0d4af71671"]
}, Open  ]],

Cell[TextData[StyleBox["Todo: use \[OpenCurlyDoubleQuote]Plot Diagnostics for \
Fitted Models\[CloseCurlyDoubleQuote] to get linear fit residuals",
 FontSize->16,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{{3.772411694374946*^9, 
  3.772411722937755*^9}},ExpressionUUID->"0fe773d5-85de-4b42-9e2e-\
59e601453d8f"],

Cell["\<\
Now that the simple piecewise model has correct coefficients, convolve it \
with a Gaussian to get a more realistic understanding of the detector system \
including resolution and other uncorrelated Gaussian noise, from photopeaks \
for example. \
\>", "Text",
 CellChangeTimes->{{3.7724096885024233`*^9, 3.772409704334569*^9}, {
  3.772409740983296*^9, 
  3.7724098043020773`*^9}},ExpressionUUID->"f9ee643b-859a-46d3-ae57-\
6a3b52a0e06c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gaussian", "[", "en_", "]"}], "=", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", "\[Sigma]"}], "]"}], ",", "en"}], "]"}]}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"3ff5fc9f-0967-4457-86f3-ca44c0d7f50c"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["en", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.772410762751665*^9, 3.772416013447769*^9, 
  3.7731658692005377`*^9, 3.7741925771149683`*^9, 3.7758447394685802`*^9, 
  3.776049092414441*^9, 3.798739254769465*^9, 3.798741227079094*^9, 
  3.7987448141623383`*^9, 3.7987451144444027`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"3b45937a-916c-48ff-8e65-8a99560baf83"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cmodelr", "[", "en_", "]"}], "=", 
   RowBox[{"Convolve", "[", 
    RowBox[{
     RowBox[{"modelr", "[", "en", "]"}], ",", 
     RowBox[{"gaussian", "[", "en", "]"}], ",", "en", ",", "en2"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[148]:=",ExpressionUUID->"96d00a70-07bd-4c81-9e15-dac49fa002b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"cmodelr", "[", "en", "]"}], ",", 
   RowBox[{
    RowBox[{"a1", ">", "0"}], "&&", 
    RowBox[{"b1", ">", "0"}], "&&", 
    RowBox[{"c1", ">", "0"}], "&&", 
    RowBox[{"\[Sigma]", ">", "0"}], "&&", 
    RowBox[{"en2", ">", "0"}], "&&", 
    RowBox[{"enc", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7724160994781637`*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"c8105dee-9c4f-4ad5-93f1-9210cc240b3b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"c1", "+", 
    RowBox[{"b1", " ", 
     RowBox[{"(", 
      RowBox[{"en2", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", "\[Sigma]"}]}], ")"}]}], "+", 
    RowBox[{"a1", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["en2", "2"], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{"en2", "+", "enc"}], ")"}], " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", "\[Sigma]"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c1", "+", 
       RowBox[{"b1", " ", "en2"}], "+", 
       RowBox[{"a1", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["en2", "2"], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"en2", "-", "enc"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7724160752606573`*^9, 3.772416100983747*^9}, 
   3.77316588861618*^9, 3.774192598261347*^9, 3.775844760947275*^9, 
   3.776049112144619*^9, 3.7987392731236467`*^9, 3.798741245575672*^9, 
   3.798744832733034*^9, 3.798745132495562*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"fc793484-ca93-4c52-a267-9eafb505c24e"]
}, Open  ]],

Cell["\<\
Now plot it all! We have to pick some Gaussian to describe how good the \
detector resolution and how dominant other noise sources are, for this we\
\[CloseCurlyQuote]ll use 0.1 .\
\>", "Text",
 CellChangeTimes->{{3.772409854408061*^9, 
  3.77240992106052*^9}},ExpressionUUID->"f9389817-4d30-462e-8dcc-\
d5e255d3c1d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kndistplot", " ", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"mixedpoints", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
         RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", "Full"}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Opacity", "[", 
      RowBox[{"0.5", ",", "Blue"}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"PointLegend", "[", 
        RowBox[{
         RowBox[{"{", "Blue", "}"}], ",", 
         RowBox[{
         "{", "\"\<Klein-Nashina Compton scattering distribution\>\"", 
          "}"}]}], "]"}], ",", "Bottom"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772409954087451*^9, 3.772409975446971*^9}, {
   3.772410037752454*^9, 3.772410044950921*^9}, {3.7724109366831083`*^9, 
   3.772410958152157*^9}, {3.7724112354522038`*^9, 3.772411258547941*^9}, {
   3.7724114219961042`*^9, 3.772411450950058*^9}, {3.772412804825596*^9, 
   3.772412872801796*^9}, {3.772413046119832*^9, 3.772413086277635*^9}, {
   3.772467023233411*^9, 3.7724670237697678`*^9}, {3.772467263814106*^9, 
   3.7724672639190407`*^9}, 3.772469652219372*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"807e5bde-8795-4c00-af0e-2954dd4d6e03"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
         RGBColor[0, 0, 1], 
         Opacity[0.5]], 
        PointBox[CompressedData["
1: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
uq9RKWPLt/1Wv8h46+PA0/INNPwHJd4k2Q==
         "]]}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
         RGBColor[0, 0, 1], 
         Opacity[0.5]]}, {}}, {{
        Directive[
         PointSize[0.009166666666666668], 
         AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
         RGBColor[0, 0, 1], 
         Opacity[0.5]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> GrayLevel[0], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {
       0, 1.1262680895601734`*^-24}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Klein-Nashina Compton scattering distribution\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                 False]], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.772411246288431*^9, 3.7724112589507227`*^9}, {
   3.772411426648196*^9, 3.772411451461478*^9}, 3.772412416947812*^9, 
   3.772412581268188*^9, {3.772412848913587*^9, 3.772412873573472*^9}, {
   3.772413064094303*^9, 3.772413086710454*^9}, 3.772416030881983*^9, 
   3.772467024184545*^9, 3.7724672645773363`*^9, 3.7724704579406557`*^9, 
   3.773165888995007*^9, 3.774192599781258*^9, 3.775844761943697*^9, 
   3.7760491132610826`*^9, 3.798739273438671*^9, 3.7987412457844887`*^9, 
   3.798744832894597*^9, 3.798745132722642*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"ffdf0379-27dd-43ba-af9b-966c1db24aa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fittedmodelplot", " ", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"modelr", "[", "en", "]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"fitparams", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"enc", "\[Rule]", "maxscatteredenergy"}], ",", 
         RowBox[{"\[Sigma]", "\[Rule]", "0.005"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"en", ",", 
      RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
      RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
         RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", "Full"}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{"{", "\"\<Simple piecewise model\>\"", "}"}], "]"}], ",", 
       "Bottom"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.77241102425038*^9, 3.772411075946205*^9}, {
   3.772411268617137*^9, 3.7724112728453074`*^9}, {3.772411357582634*^9, 
   3.7724114475804577`*^9}, {3.772412380271428*^9, 3.7724123947608423`*^9}, {
   3.772412779119179*^9, 3.772412786056636*^9}, {3.7724670182100897`*^9, 
   3.772467018734702*^9}, {3.772467255111055*^9, 3.7724672553165693`*^9}, 
   3.772469650401737*^9, {3.7724704505701447`*^9, 3.772470450676207*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"4a431f41-6448-46e0-aa8a-6c790f917a1c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126578#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.3633668316630884, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {0., 
      1.1149759176104083`*^-24}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Simple piecewise model\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.772411044786992*^9, 3.7724110763598547`*^9, 3.7724112734242887`*^9, {
   3.77241135856006*^9, 3.772411389757655*^9}, {3.772411428522573*^9, 
   3.7724114536493607`*^9}, 3.772412413550116*^9, 3.772412582975864*^9, 
   3.772412801404024*^9, 3.7724160310057993`*^9, 3.772467019557794*^9, 
   3.7724672658758917`*^9, 3.772470459624194*^9, 3.773165889166404*^9, 
   3.774192600076923*^9, 3.775844762100025*^9, 3.7760491135252867`*^9, 
   3.798739273550226*^9, 3.798741245903555*^9, 3.798744832995675*^9, 
   3.798745132847793*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"9aadb037-2887-46ec-9155-bf7dca6eaa0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fittedconvolvedmodelplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cmodelr", "[", "en", "]"}], "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"fitparams", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"enc", "\[Rule]", "maxscatteredenergy"}], ",", 
         RowBox[{"\[Sigma]", "\[Rule]", "0.005"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"en2", ",", 
      RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
      RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
         RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", "Full"}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{"{", "\"\<Gaussian convolved piecewise model\>\"", "}"}], 
        "]"}], ",", "Bottom"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772410053244421*^9, 3.77241012770539*^9}, {
  3.77241020664916*^9, 3.7724102458276587`*^9}, {3.772410689079392*^9, 
  3.7724107479120092`*^9}, {3.772410793423078*^9, 3.7724109189401503`*^9}, {
  3.772410970509326*^9, 3.7724109946745358`*^9}, {3.772411028865397*^9, 
  3.772411030055537*^9}, {3.772411081424314*^9, 3.772411086175362*^9}, {
  3.7724113988654327`*^9, 3.772411444806988*^9}, {3.7724124653682127`*^9, 
  3.772412493678792*^9}, {3.772412745249743*^9, 3.772412790317357*^9}, {
  3.772413193749906*^9, 3.772413235560869*^9}, {3.7724132710130243`*^9, 
  3.772413272237979*^9}, {3.772467009260538*^9, 3.772467009812943*^9}, {
  3.772467260785852*^9, 3.7724672608703833`*^9}, {3.7724696385875196`*^9, 
  3.772469671115711*^9}, {3.7724704484034967`*^9, 3.77247044850441*^9}, {
  3.798739349736699*^9, 3.798739368566173*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"6961f872-e1c5-475f-ac7a-a21dacacd853"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
2ZtRUfuRN2X7mf/7l61p8ioq6pvLP3tAuHrV0QvFFlQUXVzMEBJ+epk6u3UN
yT8//6g56XdGxxsT1XVUnLpz+0QS4bmPzfatWE/FHflyhXzCOeFGC85uoOLD
wRRXZ6Inc3tfvWobKnba2JYXEXZ/oreOaUfF4sPeC+YQfZ6QDuIscKSi32Xz
F0mElwjXPrBzpqJ0elmGFNE3l7Lxoe8mKu4e5y44RjivnLH44WaS/7j8r3HC
P4z+tVW5UbG7dqnySTIvm1Izf07ZSsU775wPKZL5MkmkWi/zoOLIJ6nDqYR1
Euw/OnhSsYIylDyfzOfMs2acq95U3F+5z+Q94esyZdMLfKhovzHSwZfMs/ap
1zV//KjIy9tAVSTzXzAuKV3vT8V9oSa9ZYQ/Tqpu8dlN9v9yw8qf+MWPKdP3
5AZRMeGvprMO8ZfH94fnNu2lonyqmuyn//uNhaLmt/2kX6tWyl8ifmTYmJm2
KISKss7/9W4hfnVG0GZme4iKFn6H3dSJv32dOOWZfJiKrT+lbg4SBvWdbz6F
UfF+867YBuKHS4g3DoZT8e3t901pxC/1dn60N4ug4mWWjP5Z4qfZSTtCPU5S
sf7YS3Of//vvyz1aOaep+G6k08uN+HMd8/Fk4RkqOr60LrQn/s1PO6euEE1F
39ORN1YQf59hT811PU/Fnlk6VebE/+vi3m8Pj6WieK0V3ZicDxda+Y6JcVTU
fLx4ZBE5PzZNjn/XeYmK65NLYi3I+fKgs8pj5DKZDzdt9jpy/vxOOXZkfSIV
ZxtNzd9JzqcAr92t569SUViQ/CX6Fhe2FvAc7idT0blmXvp1cp65/OI7CK5T
UYXqpvCenHedXyP3Kd6k4tnY4iM95Dzc/dqpaV46ma9eKXlZcn7+upr2POg2
mR+xa/j6jP/784mimLtUTOH+LTv4gAvOW2hrP94n9bXp6nxNzuNzxUcmzcgk
9Qpdc1yenN/WeffFS7KoGIU/KzGbnH9JTruO5FCR7rdY/TY573fLXxlKzqPi
+UK3iG5yH6g+7CTd9Zjo47hltzO5Pyzpsdo2/ykV7w1b7Sx+TPTGb23E51Q8
Na2/VJHcPzRZ1HfxBVSUOz/udu4pFzIDT1CfvqSi7barhjxyXzEd2by8rpiK
t5wn99i94ELrsdzpU0upWLvq49QWct8ZuZQ89b/XVOy42rBx7UvS72u/Eo5X
ED81fDrRTu5LXvfvbS57S0X/VUbc3SVkf8vPyzurqHh6wa5XXeS+JfwYn65V
Q8VIU1ujmDIuWI10zrWspaJn4DLJdHJ/y9Lx4LvXU9H7vM/btAqS/9rtK9Ib
iV94OfravyXnT//AvZJmKm4JfD2fQ+6D0knSSVKtVGx58Lns/jviL9VP7i34
SPY/pUqzrSH1/31lyLKD9E/J5IqQ3Dcr/ht4H9tJ/Hv/fstX5D7aI+wqy/5C
xSlGfW77G8h97t7WFRIKFRVSbvjbNZH+b5caXEmn4koT6d3zPnBB7eH6Blcm
FcOCCm9yyH24u+vfwttsKmap0/40tXFhbYF79psu4q+b3H+ntxP9xXF2f+4m
+WU+e7X7E8nHrS9Pk0f8QUr9i/dncj94Gj91tYDUr6QxwOwr4V95IzFCKlpG
9LhYUon+3f5q1/VTcfvFKA8rOhdyVwmDOIMkH/3V9w2YXLCd6W5qIKJizd3m
02vJ/4fQM27zHCRUtJn98++KLtJfZlvyzVHiF22nVb26ucDeEGtD/0HFXVOm
tJ3ikvUs2jTGxsn8mj79E8kn94UFaQetflFxPOTE2IteoveM0Z7APyR+8/kf
avrI/OtfvnPmH9Fb/aHp7QPEX9LvU95L0zD9h/Qm5WHSvwx70x5ZGnZbCtca
icn6t0NVTRRouONJl37UCLl/3P24MmwyDZ0cralN37mwcVntscQpNPw+bK88
MsaFwZJVa75Oo2HbZY9w1wmi11acNz6dhou2rX93+TcXXPvP2imr0LDq4aTc
yr9cuPpnndhdlYYJB+b0GUjzwPtBSsURdRruF7sPhsjywGhV0JS3s2jo/HDI
oVeeB1f8Wk5806Shx27zxnWTeTCacGDxLy0a6ld3hyRN4UHQi3ifDXNpeOdT
6h11JR4EBKwtCJhHQz0LQe1xZR7sVTx0qUCfhq7+x4/OmMmD46WUzJEFNFzS
4JeXpcYDlR9f6MoGNMw3fJGjPIsHxYvd072W0PCnTpV/iSYPevoDj0UupWGA
YOkmU20eaL96fv2GEQ1XPmRcfDyXB77hEeb0ZTR8EKJW6K3Hg//efx4fX07D
yG1HvnXP58E/+UK0XUlDszjGRO4iHrA31zXEmdPwxe/V73cv4YHjf4dCM1fT
8LWV9+4fS3nwZjz1jhBomHnVeEG9MQ8qtm8RTLGkYZPSf/oHlvOg9q1duB7S
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
IkyGoMx8wFB5CxP9JvbesIAhcO40Peq9lYlXt6+43mkzBMFSM2hRHkyExLw5
VS5DcH3lguh0TybWaHErz3gOQZ1PaT7Hm4lq950U1XcPwXl1zo9/PkyManYr
+h0yBPY1F+o37WTimSWv/r6NGIJZxwMp1/yZuHHKl/ot54cgrJwy6dluJrkv
BlSaJwzBV0nTmx9BTHRsb776/SZZv8I1WXMf0U9P+neZzCGouqKctzyYibFM
5YfdT4agevMmq4gQJpbyF3rdLxkCl2zdX6mHmKjQfjAyr2oIuAOHLboPk/UW
fclObB6C2LUTZfOPMvGU4Y2jdl+GoEB7tue6Y0z0sV9y1plD3hcVn46LYOLB
5qgG474hyNrGr8w7ycTvKjNe+o4OwcHqzdaVp0l/99Yq+f0dAtRbvVEmiona
DXpfLRWH4Z5KSbhuNBN3F/to7lMdBtkfBXrB55m4YPr092Fzh2E02GooMZbk
/3bzxobFwyDiK/7OjWNi6A+fTwMryHMPt6TBS0x8NsVINGI5DLHbjdYrXWHi
durnWmuHYdDeeOm4dyITlaYZGx53H4ZKe62hu1eZGGe1VHTSbxgGOjdcKEsm
8/dNd03dvmHQ3yp8IH2DiSdUh1xHjw4DN3ABc/5Nov+mz1uCo4ahIDLNc006
E6+UZJ4uuET2uxTvFX2biea3SjMY18n7C2acun+Xie1/ZS5tvD8MG0vUdfvu
k/n/3RGU9Zjsv9FdfmkmEy8xNZubi4fhTfjCqbZZZL1NCe/Nq4ah5trx1IQc
JnZvbBHGNw/DVksffJbHRMPKuil6X4ZhiPXu4K/HTNw0xnd/0DUMKRd8Weue
Ev0/UH8+3E++f5sUsuM5E02Opn0692MYJoTronMKmDhQ9D3/r5QIKnNjihpf
MvHkE/M4XwURJARLLf5WzMTFxrTWrKkiCND/Pc+glImrZ/j47VQRQW1wgoXd
a6KPO+vDKjREYJx352tKBRPnxG/bmKgtgqy+7uLPb0n/1LPf2+kTrqx8OVzF
RNHsy4seGIggP07TbHUNE3eZR/eHGokAOZMpXrVk3rQLXDgrRMBaZ1J+uJ6J
chv9is1WiyA25ateSSMTh3rmqMmuE8Gr4yqPPzUzMWOqdVSotQhELh+KdVqZ
GKIQtNPdkTwv1eyy+shE47FVf764iCDO4MHGHR1MXNhquRu3imDnlRzLh50k
3yAWdZ63CN6fRZeaL0yc+Pz0+IOdIli2z7NHmcrEmcfPZaYHiSB3++PXW+hk
Xno310YcEMEjStKLQ0wmrqObRoweFkGR88iSMjaZ70uK7n3HReDoOvCe3kXm
sTjwyJlIEfTt0MmQdDPRou3WwI9zIri+o/XvKh4TaeKixX0XRdDQrxLlISB6
ur9E9VSiCOQOfzn3UMjEsZfb18ReF4Hzr/b6nn4mMnQKhsNviWDuLP+lfweJ
X5aml0tniODnosNqdiImds1EP8Uckl+Dqs5eCROFm383P30igrYd5k9KRpko
G30+8UOBCOzHrp34+YOJP3fHPGh/JYKN86P3aPwk+xv/7jn8RgRe1kPUXb+I
H811np1YIwLxiCg49g8TOednLrNpFMGN/KXr7v1j4nJ/j4muVtK/7bzUHmkW
moTM3DTRKYLj102VZOVYeP7TvsFnNBGUvJdSdFVg4UpW0TU2RwR/J+TtUiaz
8NnHTvXvPBF01mQ8fDaFhTmuvM05/SIoiCqL+TGNhR3ydgs7xSLQ/BAUO1uZ
hQ+tbf1vjxF9znWuX6bCwjkrjnXb/RHBpD0vEsJVyfrhailHZMUwfd2jsBR1
st5uPVUzRTHoTJnHYs1i4SL/BohQFkPZHsO9MnNYWPg9muumLgbf5sMrtLVZ
qMKOuK6iJYYp+ivP757LQoHT0AlXPTFYT0kQx8xjIefdS0cDAzHE8gN4Hfrk
+6GhujNGYvjYdGSO+kIWqlqZhrw2FUOupXrocgMWXlYqC0iwEMOFnFUOp5ew
cDRPJpmDYhDdG1p/fykL5cxOVjbZiiHoHuvUKyMW9kpTjqY7i6H7mrPF72Us
fN6lzhW4iaFfzWWW1goWYuKH8tbtYvid8PHk3pUsFI+5lKz0E8PsafE6j81Z
OP1l86boQDFUaVG63q9mYdn9lS/8g8VwSDd78bQ1LFyx/Wh+7WExPC6Sv2Zk
ycJAvxGtt8fFMOSSsdoGWTj34oJztyLFsJZdGnTJioXyx8d7x86LQf1v4Msc
axb+aH+6uP+SGH6oJMeIbFkoez6mfNdVMex+5Rau5sDC/t2/moNTxUD3d8o1
cmJhTO3NPZ53xOAtXeMTvpGFTzWk7jdmknyXt6244cLCu4MFL1vyxHBim1fi
N1cWrtIsven+XAw3o7WXLHBn4YyJKYy3xWLAteFc3MbCW/fWb6soF4O432lB
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
o/LfIgX4H5D6+HQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126649#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.3633668316630884, 3.495022976074171*^-29}, 
     FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {
      3.495022976074171*^-29, 9.81497253788435*^-25}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Gaussian convolved piecewise model\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.772469673623528*^9, 3.7724704631463537`*^9, 
  3.7731658909198513`*^9, 3.774192602423901*^9, 3.775844763884638*^9, 
  3.776049115225371*^9, 3.798739275361842*^9, 3.798740002396885*^9, 
  3.798741247692492*^9, 3.798744834725024*^9, 3.79874513458361*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"24645b81-e7c8-40ef-a29b-43454719e4cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "kndistplot", ",", "fittedmodelplot", ",", "fittedconvolvedmodelplot", ",", 
   
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"maxscatteredenergy", ",", "Thick"}], "}"}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Scattered electron energy (MeV)\>\"", ",", 
      "\"\<Compton scattering cross section (\!\(\*SuperscriptBox[\(cm\), \(2\
\)]\)/MeV)\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Pane", "[", 
     RowBox[{
     "\"\<Klein-Nashina Compton Scattering Distribution and 2nd order \
polynomial fit for Cs137 gamma rays\>\"", ",", 
      RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "900"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<Ideal Compton edge at `` MeV\>\"", ",", 
            "maxscatteredenergy"}], "]"}], ",", "Black"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"maxscatteredenergy", "-", "0.025"}], ",", 
          RowBox[{"2", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
          "StringForm", "[", 
           "\"\<Simple piecewise polynomial model with fitting:\>\"", "]"}], 
          ",", "Black"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.415", ",", 
          RowBox[{"12", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<y= ``\>\"", ",", 
            RowBox[{
             RowBox[{"modelr", "[", "x", "]"}], "/.", 
             RowBox[{"Join", "[", 
              RowBox[{"fitparams", ",", 
               RowBox[{"{", 
                RowBox[{"enc", "\[Rule]", "maxscatteredenergy"}], "}"}]}], 
              "]"}]}]}], "]"}], ",", "Black"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.415", ",", 
          RowBox[{"11", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<Convolved Gaussian distribution \[Sigma]=``\>\"", ",", 
            "0.005"}], "]"}], ",", "Black"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.455", ",", 
          RowBox[{"6", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772411090944837*^9, 3.772411117592133*^9}, {
  3.772411298655259*^9, 3.77241130653362*^9}, {3.772411832372397*^9, 
  3.772411934972672*^9}, {3.772411976909831*^9, 3.772411990272887*^9}, {
  3.772412073957183*^9, 3.772412218303132*^9}, {3.772412257363208*^9, 
  3.772412289503533*^9}, {3.7724124277270727`*^9, 3.772412452642832*^9}, {
  3.772412524514937*^9, 3.772412567036317*^9}, {3.772412633795384*^9, 
  3.772412717741519*^9}, {3.772413105374806*^9, 3.7724131328885107`*^9}, {
  3.7724132844554253`*^9, 3.772413426097735*^9}, {3.7724134602166767`*^9, 
  3.772413544981018*^9}, {3.772413581533249*^9, 3.77241378438727*^9}, {
  3.772413902566196*^9, 3.772414187362883*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"763d2f82-6b48-49db-a144-6e2fb8387849"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]], 
         PointBox[CompressedData["
1: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
uq9RKWPLt/1Wv8h46+PA0/INNPwHJd4k2Q==
          "]]}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]]}, {}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$126578#1"]& ]}}, {}}, {{{{}, {}, 
        
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
2ZtRUfuRN2X7mf/7l61p8ioq6pvLP3tAuHrV0QvFFlQUXVzMEBJ+epk6u3UN
yT8//6g56XdGxxsT1XVUnLpz+0QS4bmPzfatWE/FHflyhXzCOeFGC85uoOLD
wRRXZ6Inc3tfvWobKnba2JYXEXZ/oreOaUfF4sPeC+YQfZ6QDuIscKSi32Xz
F0mElwjXPrBzpqJ0elmGFNE3l7Lxoe8mKu4e5y44RjivnLH44WaS/7j8r3HC
P4z+tVW5UbG7dqnySTIvm1Izf07ZSsU775wPKZL5MkmkWi/zoOLIJ6nDqYR1
Euw/OnhSsYIylDyfzOfMs2acq95U3F+5z+Q94esyZdMLfKhovzHSwZfMs/ap
1zV//KjIy9tAVSTzXzAuKV3vT8V9oSa9ZYQ/Tqpu8dlN9v9yw8qf+MWPKdP3
5AZRMeGvprMO8ZfH94fnNu2lonyqmuyn//uNhaLmt/2kX6tWyl8ifmTYmJm2
KISKss7/9W4hfnVG0GZme4iKFn6H3dSJv32dOOWZfJiKrT+lbg4SBvWdbz6F
UfF+867YBuKHS4g3DoZT8e3t901pxC/1dn60N4ug4mWWjP5Z4qfZSTtCPU5S
sf7YS3Of//vvyz1aOaep+G6k08uN+HMd8/Fk4RkqOr60LrQn/s1PO6euEE1F
39ORN1YQf59hT811PU/Fnlk6VebE/+vi3m8Pj6WieK0V3ZicDxda+Y6JcVTU
fLx4ZBE5PzZNjn/XeYmK65NLYi3I+fKgs8pj5DKZDzdt9jpy/vxOOXZkfSIV
ZxtNzd9JzqcAr92t569SUViQ/CX6Fhe2FvAc7idT0blmXvp1cp65/OI7CK5T
UYXqpvCenHedXyP3Kd6k4tnY4iM95Dzc/dqpaV46ma9eKXlZcn7+upr2POg2
mR+xa/j6jP/784mimLtUTOH+LTv4gAvOW2hrP94n9bXp6nxNzuNzxUcmzcgk
9Qpdc1yenN/WeffFS7KoGIU/KzGbnH9JTruO5FCR7rdY/TY573fLXxlKzqPi
+UK3iG5yH6g+7CTd9Zjo47hltzO5Pyzpsdo2/ykV7w1b7Sx+TPTGb23E51Q8
Na2/VJHcPzRZ1HfxBVSUOz/udu4pFzIDT1CfvqSi7barhjxyXzEd2by8rpiK
t5wn99i94ELrsdzpU0upWLvq49QWct8ZuZQ89b/XVOy42rBx7UvS72u/Eo5X
ED81fDrRTu5LXvfvbS57S0X/VUbc3SVkf8vPyzurqHh6wa5XXeS+JfwYn65V
Q8VIU1ujmDIuWI10zrWspaJn4DLJdHJ/y9Lx4LvXU9H7vM/btAqS/9rtK9Ib
iV94OfravyXnT//AvZJmKm4JfD2fQ+6D0knSSVKtVGx58Lns/jviL9VP7i34
SPY/pUqzrSH1/31lyLKD9E/J5IqQ3Dcr/ht4H9tJ/Hv/fstX5D7aI+wqy/5C
xSlGfW77G8h97t7WFRIKFRVSbvjbNZH+b5caXEmn4koT6d3zPnBB7eH6Blcm
FcOCCm9yyH24u+vfwttsKmap0/40tXFhbYF79psu4q+b3H+ntxP9xXF2f+4m
+WU+e7X7E8nHrS9Pk0f8QUr9i/dncj94Gj91tYDUr6QxwOwr4V95IzFCKlpG
9LhYUon+3f5q1/VTcfvFKA8rOhdyVwmDOIMkH/3V9w2YXLCd6W5qIKJizd3m
02vJ/4fQM27zHCRUtJn98++KLtJfZlvyzVHiF22nVb26ucDeEGtD/0HFXVOm
tJ3ikvUs2jTGxsn8mj79E8kn94UFaQetflFxPOTE2IteoveM0Z7APyR+8/kf
avrI/OtfvnPmH9Fb/aHp7QPEX9LvU95L0zD9h/Qm5WHSvwx70x5ZGnZbCtca
icn6t0NVTRRouONJl37UCLl/3P24MmwyDZ0cralN37mwcVntscQpNPw+bK88
MsaFwZJVa75Oo2HbZY9w1wmi11acNz6dhou2rX93+TcXXPvP2imr0LDq4aTc
yr9cuPpnndhdlYYJB+b0GUjzwPtBSsURdRruF7sPhsjywGhV0JS3s2jo/HDI
oVeeB1f8Wk5806Shx27zxnWTeTCacGDxLy0a6ld3hyRN4UHQi3ifDXNpeOdT
6h11JR4EBKwtCJhHQz0LQe1xZR7sVTx0qUCfhq7+x4/OmMmD46WUzJEFNFzS
4JeXpcYDlR9f6MoGNMw3fJGjPIsHxYvd072W0PCnTpV/iSYPevoDj0UupWGA
YOkmU20eaL96fv2GEQ1XPmRcfDyXB77hEeb0ZTR8EKJW6K3Hg//efx4fX07D
yG1HvnXP58E/+UK0XUlDszjGRO4iHrA31zXEmdPwxe/V73cv4YHjf4dCM1fT
8LWV9+4fS3nwZjz1jhBomHnVeEG9MQ8qtm8RTLGkYZPSf/oHlvOg9q1duB7S
MDiJc2vSSh58mVV+IciKhmdvmQV0m/MgTKbm1XlrGlZou65PtuDBrG8OIa22
NHx+ibnv7FoeOLgGWontaTjtF2uqFfIgpr50+xQnGpoHrS/+acWDepPLEteN
NIyx2EOV2PAgdan46WEXGg7PtHGptOdByBxK/1tXGnqqUuGDEw9cZnw/IOVO
Q0FaXsLHTSTem3lTtbfRcE+Sk1SOKw9MVGjLgrbT0C+4Q/+tOw+Wa2ccvehF
w+wmp5YcDx6sNb43fn8HDW+1WubEevHAdeUcGa4vDaWXXfbN8+HBcPPSpTK7
SP3ndIff2smDm9veUDcF0HBkU2dQewDJRxDbkBRI9Of/mfcniAcXFLu/PNpD
w5MHP6X+3MeDD7qV+0T7aJgXUeGxJoQHd+uNtVQO0LBm5rJnTqE8OOY/d8vO
gzSsFg0pZ4bxwEvWrvlhKA1HZ3okDB7jQaOZTEDVERquFrIPKpzkwXofyyjF
cBqWVe6/sTeSB9aqSuWGx2loqyiOvXGWB24daqtsT9BQRuuL56vzRH8xd1Zf
OUXDvsyyh3pxPJhc/8rrSSSpz06jpO3xPHj52/XfjyganpFy7aMk8GAPzOev
PkfDjYyr8Zuu8SB38uUB9xgaNsxqu51wnQdDzaERdy8QvfZf3zorjQfVOn16
lRdpuGt/Ji/4Ng8yIu4qfYmn4ZtCv9iX90g96lrPaCbQ8Nrf2l92mTwYy7qu
tCqJhm/fsPSzsnlw5DhV7/w1GkbNuqO96RGZD1rhttwUGup6ZP5Xmc+DOOv3
zVU3aMjI6uvQf8GD+5nutQppJP9/vme+vuTBhmsnWItuEf2U/6fm+orEF6Z9
OvwODUtOrnuiWc6DbJ9xr9J7NBwfOWtBecsD/td9np0ZNLxRKBvrVU30YevJ
0H5IQ68FJgpGdTxQsGGewWwSX2fWo9pG8r5juv/2XBqqLts8fXMLD9qsO5vu
Pvq/P21kLm0n+7c9dKt4QvTeHfHwQycPKjeKfSc9o6HQc+eHSgoPbD5F5Du8
oKEvbcGsHAYPPHpTZu8uJM+lKEs3cXhwWGI4Jb+IhqD8ge7YwwONxB1aLSU0
jLbRLZskIPOmpVg4p4yGOaz1S7X6eRBZOHTRr5zku6LWWW+YB+8o+6JOv6Fh
wcZpwQIJD6ZJ/H/WVZL8jk/dLjfGA+7d4evCdzRcP/NabtcEmS+XklCZ9zQs
rxgLef6XBwWjPz861NGQQrc3/SzDh0VLOzfvayD+mnvWtEyBD9nblm4taaKh
1NUTxt+n8MHoYsWtsQ805M9eKLVAmQ9Wjl1/Z7bRsHV0hKGsygfffzG9O9pJ
f5KT+7bN4oO83RvxmU80ZD+P3uepxYfS64ZrUz/TcG/HuYvOunwI+6I1lf6V
hrPV8hRvz+dDWV7GzzEqDetne3RmGfBB4dDDEGsGDa9M3zyhaMiHnWtY82JZ
xG+c+Xr+JnywvvV09B6HhtO/zwoIW8kHk/6JjbxvNJz4r87822o+PGpl1cpz
aWh/4Um8oiUfFmdjtTuf9OPulpBrVnwoOkf7e7OXhokX19In2fGhaXiST1Ef
DWNH1W6ucuJDr1uJ5Z8BUo+3tnMaXPiQYjO2bt4wDbP6N7tNd+eD/boj51aL
yXqFR1g22/kgZxjsEDVCw2UmTQHMHXzY+GTM+N53GsZNex723y4+3NOWuy0c
I3oe9zlOD+TDeKqD3dIJGt6eoBmf2s8HTobeTLvfNFSrPLzh40E+tN07GZD0
l4bv/rty7mIYHxwM93x6IUVH6rvZ50aP86G1+nJMvQwdg9YZSLme5oO3s/Hr
KfJ01K8opytH8+Fo0J7piyfRsc3P2SUmlg83jur0hinSUT12wyyfeD6sn7n/
282pdHy8m8USJPJhrHRAq0CJjtNup7/wT+HDK7dh+g9lOs7P1Z28IY0P0pFx
rzVm0nHWglNmn+/wYevtu9qBanQc8Mjitj7gQ2FV37tcDToWp7T+Lcnhw+1j
rbE1s+n40L/zrcsTPlzRXdY6VYuOX08KzV1f8GGy90IzYx06OoLotXQxH67e
cWfb6tKRu0o/7EEZH+Z2SE27okfHhZ8G1R6/5YNF2gavx/PpWNP64tauGj74
uMku/b6Q5HNwh2xMAx/iZ/62NF9Mx8rnbdLXW/iwITD+sOt/dLx/TKPItYMP
sk9SDdIN6bjv8LPoU1/54Bpt/rfMmHDy3T1uDD7kOHl4TVpOx0zHjYGpXaSf
2s+/O5nSMSfK/Vw9jw/DZ24X7jUj8ZaYx2X18aG7U15SuIqOC1SzGUPDfPAv
l9/yxYKOlywrz/BG+dCXZzkyuIaOSic6Jjf+5MPp+NHZK9fR0fy/aPU5//iQ
/gv93NfT0X2Or52GnADe+k9Z/GADHZdOvzFyXlEAg23TTLttSP0LLgsZ0wXw
qCXL948dHd2OKH5mqQrgQOXraXaOdBS9+xjmpimA8vWBjL3OdLwe5Xvg4FwB
qDbb9UdtoiMtcUlE+HwBHLN/dPb9ZjoqHgnbO7RYAAHb7pt+c6Nj9Bp6vLKx
ALZvVw0x3ErHxTeaL2ebCoAq1K519aCjmuse/a7VAtgd4+cb7ElHBa0WT4V1
AhiboXu60JuOaeXuGZnWAtBYFl7W4UP0MBTj3u0gAEsrh1O6O+nImiqrestF
AKHeW88E+JN+KVt2wFYBGMp9z4jaTccZlt9bor0EIMlUs28MomMz68i0dTsF
YN3eqNS/l474dO/Q/UABZMiXqMsG0/GE//Rbwv0CkF0276FDCB1tms3LnoaS
73t1XfYeouP51Hy3mccE0HfzflTRYTq+2aLtLT4lgAHnbaLRMDran+m7XB4t
gFPJD84pHyN6yS1QWBgngBkfgtO2R5B+2ExbMiVBAMtTm1pOnKSj9P6mX1eT
BbDDPS+u4TTJ507p4eQ0AVyd/fbc1Cg6Nuw7mx55TwCbD+29uziajrkqEzgp
SwCzyq6tOXqejkPOWTXTHwsgOMVl4mYsHavUXy0peS6AxqM2Ey/i6KjKUlay
KRaAsePrqB+X6FgQxvrtWi6AeS9q9DWu0LEpbvejX1UCmKPo7Lw7kejBxG7H
wnoBzA2eWpJzlY711+36VrUI4PmOXeuqk+n4u3WRvKBDAHZWKzdOuUHHk1oX
dmpQBbC/9O5Jw5t0/HC898k3lgDSVlr2WqfT0Veq+O6NHgG05vgwLt2mo6R9
z99GIckvb8ZQ7l067sm1XpI+LACve9YXJPfp+K3IslL4XQBGt5/7mmaS9Xes
8Jr/WwCJBs+3bcqiY7a/S9IP6V74/sjw040cojfN1sBNk3tBWI6HSvLoCIMK
ayyn9wLvXUeS7BM6rqqceFao1gv9rXdEdk/pKFx+oVBJqxfOHJg4svs5HTso
B2Ol9Xph1h9KxLMCOmaIXxueNugFS12ne+0v6Thzsa1iglEvHHQYlRUWk/Uo
i9fHmPZCTpDOsHEpiW+J/xlp6IX9qoyfm17TcbvjyXr19b1gVjIr/nYFHVNi
L894adcL0/wSvJhv6XiIVaBmtqkXDqWlOo5V0XGOpsn3je69QK3VqcQaOm7r
PjZ9yKsX2s7DFv9aOkZIBe6fv4uw/VWDE/V0bNdWcFy3pxcoUrvPvWmkY8lI
THJPSC8ccPowQWumo3XHvFGto70w6dLL8QWtpF+TrrzmnOyFZR7GGo4f6ajb
XfDHLLoX/Jd2hwd00LHlkf6WI3G9cHdUzfNxJ6n/CB0sEnshwIXp3fSFjrIb
D5xMud4LJnf1uzWoZN7/22Z/8nYvKIofPPGik+ftRy7YZpL6fC1KOcak46D7
DmFmXi/QX9j+q2TT0allRC3xeS980gy58q2LjpE2gR8mlfTCl8vNnj+76RjW
oPNmT0UvdA3nPVnHo6Nd4PycbTW9cJynqe0rIOdN6IjoU2MvqH+cMvOxkI4m
VaHLvn3shcoqU8e+fnJeZVMmff7aCyPrxRlyQ6Sf7Z9Vt7JIvK+MTm8U0bE2
d8xxD7cXxiv+HjsooWPP/iWa8v290FTi8r1ilKzvIzN9laQXsl99Lfn3g/jt
ms0Gm372whSHkVTtn3QsStN6PPSvF062Jk3s+UXH15dD4hdMEsLRnsqoy3/o
GNwsu4qnJIQTUgY2Wf/oGPfg7qdLakK4oDI9SSjNwHJjzp9qLSHoFMWPTZZj
YOTqr62x+kKodIjlbVNg4Jk828XsJULYz3ullj6ZgeOhMe1zlgvhwcyo3UVT
yPvWbwY5q4TAMa01/z2NrNd1qHUtCuEx7/6SucoMTPzmdlHPTghR9wt9zVQY
eGPwoFfvRiHscLbWOKXKQOjeONdhqxBqL+0fSlNn4Iy9D1KNdwjBrHy6c88s
Bv568unn8wAhLI90aJg0h4G9sr/DS/YLYbVteayeNgPfZndfv3dYCPYy+fX7
5jLwsN62jnknhNC92WRx/DwGet569HvxWZJv8srpFH0GBs+vs2qNE8IK+mGz
OQsZuE+Uetk9SQgHiqwizQ0YuEV+SrJvqhCeRifbRy9hYMWldqHcPSGcZB9b
kbWUrLdzadCybCG4Wqf4VRgx8E2i9nPIF8Kyu0bK0iYMTLZbfor7Ugi3L/hy
dFcwUMbs9voZ5UJQ2j1tZchKBvpML4xlVAvhiv1I0zNzBopFM35cbBLCjTeH
zjauZuByL98VJe1CyFm4//WMNQyUk5VfEEMVwgbd8ZkrLBn4sWHctoMjBKFu
1TMHZGDuq9Gd//hCuKUm35pgxcD87+t3fhwSwudbnKlPrBmYujZ079wfQpil
avFx1JaBB/3rXGb8FQJf2+DlbAcG0myfZEXL90GV0aavy51I/MFrItun9UHm
CknUiY0MxKhNQbVqfTC9cal9ugsDtcaXXDfT7oMYN+51nisDTzlGtzgv6APZ
7s96i90Z+Lxqp9DKkLwv6/3RehsD9XN0tIpN+0B/tp904nYGTn11+VrLmj6o
fvtjywsvBoafEp/dZd0HwcENvPodDNzJm6XT6dQH2lNn/ZnqR/RzOdh4cEsf
eK39ZfrfLgZGXWxMPufdBxn+fsPHAhjY1Jq+uzKgD4YTf/a/CmTgsFv1Bnpw
HzQ7LZncsYeBMVYcm9CwPnj+i/Jo9n4G2jQ0Djw71Qc6llr7LQ4w8Er0cp2g
832QGsZ6dvEgA3kWrUP1l/tg1guK6YdQBgaUbPOcdL0PFkTuoQmOMFBt6aBm
1e0+AMtw2RXhDKSKw0v0s/qAkaSxadtxBo7mdCv9edIHFwUiysETDORI9zcU
v+yDNSudBEWnSLzFvQmaFX1wSmW1RmckA0+We/FHavqgpju7Sfcs6ffLcNvI
D32gVuFY6X+OgQLtwaDuzj6QzI/5FBnDwJtZ6/rfMPqAGr3mQN0FBoYGaT23
4/aB46FL8wUXGXi9TGONzUAf1AUo6fyNZ6B9xIT73FHy3FnlzoYEBs4+nEJ/
9JvUs/bx6l1JDJyy76lsrlw/HFle7Z1/jYGvPSNvbFXqB7VlB+9+TGHgpf5d
hsfU+6HG1E1XeIOB5zZWMo7o9MMJw+JFJmkMFD3zW6C3qB/KS/I3ud4iem7R
drYy7gc5U/2f9+6QeZ5upaC+qh88S9t5XffIfnofVtdhP6xuUZX8zmDgxPGt
mjz7fpj35ct5u4fET1Y8q3/t2g83Dhma7s9m4O8dChf/ePbDTOWKBedyGbjs
acMlbf9+SM9qvF3/iIFHdypeEu/vhyeNwSa8J2R+s/8LWxnWD7Xfrjgtf8bA
Bylrtxqf7gehNC8n7AUDpwfspMjG9sOtl5/mJRYyUMFZU8MuoR/ctuO8L0UM
TNd0i12f2g+pCevxRwkDHYqvqubd64dvJe+6bcoYaMFhtdbnkvj5JxoulTOw
o/RtUfWLfpiTV/ch5w0Dp2VIXzYoI/n7JG8VVTJwwRa7WvvqfjiVKf6tWs1A
/mC++6emfpgYjOcbvmfgf2Jtqvmnfogxztx6tI6BD8sbxB6Mfkj7t7E7pYGB
R5yGVnX19ENRbcQop4n4zSGj6YsG+4F+jW6v30LqIXSysPvRDwmDHeWWbcQf
Q2f5t/3tJ//PHF7GtTMwrU7FTW3yACTqujc9+sTAkgv8h9UzBoA16abeu88M
NPUXqTpoDoA5d/tfOQoDv/6LPZOoPwBz3J5P6NMYOHlggZ7F0gFQeBlz+hCD
9CvldGn2ygH4o5ls+YLFwMHvqS1CywE4O9NUt4lD/H2gduC63QBM+ed+YUY3
mcfOHvN/mwdgXqTi1OVcBr6zKBS3eQ7AukFL9bN8BhZxKzp2BQzA3qAnu2p6
GSg7/l/FhwMDoHUo/wO7j4FDl8a4t8IHgBq8tGLxIAP/Xb8fsjSKrDeOzc7D
RM+ml2/pXhyAowkJcwLFDNzm++hW/9UBaFPzHH48wkCNkQuLI28NQLFRWU/j
dxJf2daVhx4OQBak+aiPM7Al4EzTwqcDcNflucb2CfL8aHJySckA6I14iY78
ZuD6Mq28nMoBeH4l1qX8L/Fz1eozPo0DUF9s3cKQYuLjNSsmHe0YACEXrkhk
mLj2n0XSLvoAqCkWtpnLM3FuZZCCBncAPrytWL51EhP3CTmK/w0OwOU9tpoZ
ikzUrAoaVxgbgM8Zu+e9n8rEsibmVyupQVjS9XofU4mJvF9x69wVByFO7arZ
/BlMPPDucY2x6iCE0sb1rGcy8b8ZfKW92oOwK+VbyjU1Jr78kXU4eNEg7Ngi
Y9upwcQZs0+8sTEZhO6HpRrDs5moGr0n45TFIBwR9Ies1mLi+XzdT5HWg5Dw
prjbW4eJFw/JSdM3DkJhesmtMF0mvpvQ65nmMQjsfWZfSvWYmGxyx1Zp1yCk
NTmafJ1P8tm2LnLv/kHwnMtS1l/ExKyt142uHR2EBacemexezMTbrCpx0plB
OL1n8pEz/zFx1pxBb37cINDtBGZ1hkxMdLc4rpQ8CHWl3nP4xkykKivcTbg9
CGXam2JWLmeiu9f+UGb2ILy6FGF0wpSJS5Ys75J+MQh4wXzshhmJb+z7f1Fl
g9B+LNyWs4qJH4/p+7TUDMLgD7siGWBi49DslsMtg6B21i1Aay0TbYRKWcIv
g2D9i57qv46Jp4/GJJt1DcLfST97o9czUWeq5c2vwkGonnzzXesGJloPrXnm
PDoIV2ccoCnbkn5vkLmS+ncQeh99Vllqz8SCxTs3m04eAkezt21HHZkYGPbD
N3fmEJhvgfxUZyY+bdtZFqI9BEbHhxufbmKiTN6kbIVFhJPmHxBvZuLfskVT
IkyGoMx8wFB5CxP9JvbesIAhcO40Peq9lYlXt6+43mkzBMFSM2hRHkyExLw5
VS5DcH3lguh0TybWaHErz3gOQZ1PaT7Hm4lq950U1XcPwXl1zo9/PkyManYr
+h0yBPY1F+o37WTimSWv/r6NGIJZxwMp1/yZuHHKl/ot54cgrJwy6dluJrkv
BlSaJwzBV0nTmx9BTHRsb776/SZZv8I1WXMf0U9P+neZzCGouqKctzyYibFM
5YfdT4agevMmq4gQJpbyF3rdLxkCl2zdX6mHmKjQfjAyr2oIuAOHLboPk/UW
fclObB6C2LUTZfOPMvGU4Y2jdl+GoEB7tue6Y0z0sV9y1plD3hcVn46LYOLB
5qgG474hyNrGr8w7ycTvKjNe+o4OwcHqzdaVp0l/99Yq+f0dAtRbvVEmiona
DXpfLRWH4Z5KSbhuNBN3F/to7lMdBtkfBXrB55m4YPr092Fzh2E02GooMZbk
/3bzxobFwyDiK/7OjWNi6A+fTwMryHMPt6TBS0x8NsVINGI5DLHbjdYrXWHi
durnWmuHYdDeeOm4dyITlaYZGx53H4ZKe62hu1eZGGe1VHTSbxgGOjdcKEsm
8/dNd03dvmHQ3yp8IH2DiSdUh1xHjw4DN3ABc/5Nov+mz1uCo4ahIDLNc006
E6+UZJ4uuET2uxTvFX2biea3SjMY18n7C2acun+Xie1/ZS5tvD8MG0vUdfvu
k/n/3RGU9Zjsv9FdfmkmEy8xNZubi4fhTfjCqbZZZL1NCe/Nq4ah5trx1IQc
JnZvbBHGNw/DVksffJbHRMPKuil6X4ZhiPXu4K/HTNw0xnd/0DUMKRd8Weue
Ev0/UH8+3E++f5sUsuM5E02Opn0692MYJoTronMKmDhQ9D3/r5QIKnNjihpf
MvHkE/M4XwURJARLLf5WzMTFxrTWrKkiCND/Pc+glImrZ/j47VQRQW1wgoXd
a6KPO+vDKjREYJx352tKBRPnxG/bmKgtgqy+7uLPb0n/1LPf2+kTrqx8OVzF
RNHsy4seGIggP07TbHUNE3eZR/eHGokAOZMpXrVk3rQLXDgrRMBaZ1J+uJ6J
chv9is1WiyA25ateSSMTh3rmqMmuE8Gr4yqPPzUzMWOqdVSotQhELh+KdVqZ
GKIQtNPdkTwv1eyy+shE47FVf764iCDO4MHGHR1MXNhquRu3imDnlRzLh50k
3yAWdZ63CN6fRZeaL0yc+Pz0+IOdIli2z7NHmcrEmcfPZaYHiSB3++PXW+hk
Xno310YcEMEjStKLQ0wmrqObRoweFkGR88iSMjaZ70uK7n3HReDoOvCe3kXm
sTjwyJlIEfTt0MmQdDPRou3WwI9zIri+o/XvKh4TaeKixX0XRdDQrxLlISB6
ur9E9VSiCOQOfzn3UMjEsZfb18ReF4Hzr/b6nn4mMnQKhsNviWDuLP+lfweJ
X5aml0tniODnosNqdiImds1EP8Uckl+Dqs5eCROFm383P30igrYd5k9KRpko
G30+8UOBCOzHrp34+YOJP3fHPGh/JYKN86P3aPwk+xv/7jn8RgRe1kPUXb+I
H811np1YIwLxiCg49g8TOednLrNpFMGN/KXr7v1j4nJ/j4muVtK/7bzUHmkW
moTM3DTRKYLj102VZOVYeP7TvsFnNBGUvJdSdFVg4UpW0TU2RwR/J+TtUiaz
8NnHTvXvPBF01mQ8fDaFhTmuvM05/SIoiCqL+TGNhR3ydgs7xSLQ/BAUO1uZ
hQ+tbf1vjxF9znWuX6bCwjkrjnXb/RHBpD0vEsJVyfrhailHZMUwfd2jsBR1
st5uPVUzRTHoTJnHYs1i4SL/BohQFkPZHsO9MnNYWPg9muumLgbf5sMrtLVZ
qMKOuK6iJYYp+ivP757LQoHT0AlXPTFYT0kQx8xjIefdS0cDAzHE8gN4Hfrk
+6GhujNGYvjYdGSO+kIWqlqZhrw2FUOupXrocgMWXlYqC0iwEMOFnFUOp5ew
cDRPJpmDYhDdG1p/fykL5cxOVjbZiiHoHuvUKyMW9kpTjqY7i6H7mrPF72Us
fN6lzhW4iaFfzWWW1goWYuKH8tbtYvid8PHk3pUsFI+5lKz0E8PsafE6j81Z
OP1l86boQDFUaVG63q9mYdn9lS/8g8VwSDd78bQ1LFyx/Wh+7WExPC6Sv2Zk
ycJAvxGtt8fFMOSSsdoGWTj34oJztyLFsJZdGnTJioXyx8d7x86LQf1v4Msc
axb+aH+6uP+SGH6oJMeIbFkoez6mfNdVMex+5Rau5sDC/t2/moNTxUD3d8o1
cmJhTO3NPZ53xOAtXeMTvpGFTzWk7jdmknyXt6244cLCu4MFL1vyxHBim1fi
N1cWrtIsven+XAw3o7WXLHBn4YyJKYy3xWLAteFc3MbCW/fWb6soF4O432lB
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
o/LfIgX4H5D6+HQ=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$126649#1"]& ]}}, {}}}, {
    GridLines -> {{{0.47737366137794246`, 
         Thickness[Large]}}, {}}, Frame -> {True, True, False, False}, 
     FrameLabel -> {
       FormBox["\"Scattered electron energy (MeV)\"", TraditionalForm], 
       FormBox[
       "\"Compton scattering cross section (\\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(2\\)]\\)/MeV)\"", TraditionalForm]}, Axes -> False, PlotLabel -> FormBox[
       PaneBox[
       "\"Klein-Nashina Compton Scattering Distribution and 2nd order \
polynomial fit for Cs137 gamma rays\"", Alignment -> Center], 
       TraditionalForm], ImageSize -> 900, Epilog -> {
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Ideal Compton edge at \
\\!\\(\\*FormBox[\\\"0.47737366137794246`\\\", TraditionalForm]\\) MeV\"", 
           StringForm["Ideal Compton edge at `` MeV", 0.47737366137794246`], 
           Editable -> False], 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.45237366137794244`, 
          Rational[1, 5000000000000000000000000]}, {0.45237366137794244`, 
         1.9999999999999998`*^-25}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Simple piecewise polynomial model with fitting:\"", 
           StringForm["Simple piecewise polynomial model with fitting:"], 
           Editable -> False], 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.415, 
          Rational[3, 2500000000000000000000000]}, {0.415, 1.2*^-24}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"y= \\!\\(\\*FormBox[TagBox[GridBox[{{\\\"\[Piecewise]\\\", \
GridBox[{{RowBox[{RowBox[{\\\"5.789121269622872`*^-23\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", \\\"2\\\"]}], \\\"-\\\", \
RowBox[{\\\"4.3597447556414926`*^-23\\\", \\\" \\\", \\\"x\\\"}], \\\"+\\\", \
\\\"8.736258116598735`*^-24\\\"}], RowBox[{\\\"x\\\", \\\"\[LessEqual]\\\", \
\\\"0.47737366137794246`\\\"}]}, {\\\"0\\\", TagBox[\\\"True\\\", \
\\\"PiecewiseDefault\\\", Rule[AutoDelete, True]]}}, Rule[ColumnAlignments, \
List[Left]], Rule[ColumnSpacings, 1.2`], Rule[ColumnWidths, Automatic], \
Rule[AllowedDimensions, List[2, Automatic]], Rule[Selectable, True], \
Rule[Editable, True]]}}, Rule[ColumnAlignments, List[Left]], \
Rule[ColumnSpacings, 0.5`], Rule[ColumnWidths, Automatic]], \
\\\"Piecewise\\\", Rule[SyntaxForm, Equal], Rule[SelectWithContents, True], \
Rule[StripWrapperBoxes, True], Rule[Selectable, False], Rule[Editable, \
False], Rule[DeleteWithContents, True]], TraditionalForm]\\)\"", 
           StringForm["y= ``", 
            
            Piecewise[{{
              8.736258116598735*^-24 - 
               4.3597447556414926`*^-23 $CellContext`x + 
               5.789121269622872*^-23 $CellContext`x^2, $CellContext`x <= 
               0.47737366137794246`}}, 0]], Editable -> False], 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.415, 
          Rational[11, 10000000000000000000000000]}, {0.415, 
         1.0999999999999998`*^-24}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          
          "\"Convolved Gaussian distribution \
\[Sigma]=\\!\\(\\*FormBox[\\\"0.005`\\\", TraditionalForm]\\)\"", 
           StringForm["Convolved Gaussian distribution \[Sigma]=``", 0.005], 
           Editable -> False], 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.455, 
          Rational[3, 5000000000000000000000000]}, {0.455, 6.*^-25}]]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> GrayLevel[0], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {
       0, 1.1262680895601734`*^-24}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Klein-Nashina Compton scattering distribution\""}, 
        "PointLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
          StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
             
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Simple piecewise model\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Gaussian convolved piecewise model\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.772413700292083*^9, 3.772413751937557*^9}, 
   3.772413784929715*^9, {3.77241390316782*^9, 3.772413906829031*^9}, {
   3.772413970392762*^9, 3.772413997584203*^9}, {3.77241405111982*^9, 
   3.772414079885766*^9}, {3.772414111003603*^9, 3.772414144772778*^9}, {
   3.772414175029285*^9, 3.77241418782069*^9}, 3.772416033220825*^9, 
   3.7724670270270987`*^9, 3.77246727260113*^9, 3.7724704649208107`*^9, 
   3.773165891153162*^9, 3.7741926025829*^9, 3.775844764022562*^9, 
   3.7760491153589973`*^9, 3.798739275549053*^9, 3.798741247819154*^9, 
   3.798744834831815*^9, 3.798745134727046*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"e50135c0-b40f-4ffb-bb85-e41e2f07154b"]
}, Open  ]],

Cell["\<\
Differentiate the convolved model to demonstrate how close the minimum is to \
the true Compton edge\
\>", "Text",
 CellChangeTimes->{{3.772415646778529*^9, 
  3.7724156721266737`*^9}},ExpressionUUID->"10ccb401-0b87-448a-a098-\
125472254859"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scmodelr", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"cmodelr", "[", "en", "]"}], ",", 
    RowBox[{
     RowBox[{"a1", ">", "0"}], "&&", 
     RowBox[{"b1", ">", "0"}], "&&", 
     RowBox[{"c1", ">", "0"}], "&&", 
     RowBox[{"\[Sigma]", ">", "0"}], "&&", 
     RowBox[{"en2", ">", "0"}], "&&", 
     RowBox[{"enc", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7724160942302923`*^9, 3.7724160954660997`*^9}, {
   3.772416172139305*^9, 3.7724161726083717`*^9}, {3.7724666177575817`*^9, 
   3.772466618402952*^9}, {3.7724666644240437`*^9, 3.772466696018585*^9}, 
   3.77246675387783*^9, {3.77246685232015*^9, 3.7724668534241343`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"bb8bd075-c329-4661-b93c-0d9c25c8ee0b"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"c1", "+", 
    RowBox[{"b1", " ", 
     RowBox[{"(", 
      RowBox[{"en2", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", "\[Sigma]"}]}], ")"}]}], "+", 
    RowBox[{"a1", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["en2", "2"], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{"en2", "+", "enc"}], ")"}], " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", "\[Sigma]"}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c1", "+", 
       RowBox[{"b1", " ", "en2"}], "+", 
       RowBox[{"a1", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["en2", "2"], "+", 
          SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"en2", "-", "enc"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.772466861861285*^9, 3.7731658923576107`*^9, 
  3.774192604007929*^9, 3.775844765258114*^9, 3.776049116693121*^9, 
  3.7987392767349997`*^9, 3.798741249109365*^9, 3.798744836163671*^9, 
  3.798745136141637*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"ef68e742-72ec-4328-9c5f-a049fe4234dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dscmodelr", "=", 
  RowBox[{"D", "[", 
   RowBox[{"scmodelr", ",", "en2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772466707548214*^9, 3.772466727201289*^9}, {
  3.772466819074801*^9, 3.772466855234919*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"03628206-2f85-4de7-ac2b-8320a8527d96"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"b1", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{"en2", "-", "enc"}], ")"}], " ", 
         SqrtBox[
          FractionBox["2", "\[Pi]"]]}], "\[Sigma]"]}], ")"}]}], "+", 
    RowBox[{"a1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "en2"}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
         RowBox[{"(", 
          RowBox[{"en2", "-", "enc"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"en2", "+", "enc"}], ")"}], " ", 
         SqrtBox[
          FractionBox["2", "\[Pi]"]]}], "\[Sigma]"], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
        SqrtBox[
         FractionBox["2", "\[Pi]"]], " ", "\[Sigma]"}]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"en2", "-", "enc"}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
      SqrtBox[
       FractionBox["2", "\[Pi]"]], " ", 
      RowBox[{"(", 
       RowBox[{"c1", "+", 
        RowBox[{"b1", " ", "en2"}], "+", 
        RowBox[{"a1", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["en2", "2"], "+", 
           SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}], ")"}]}], "\[Sigma]"],
     "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b1", "+", 
       RowBox[{"2", " ", "a1", " ", "en2"}]}], ")"}], " ", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"en2", "-", "enc"}], 
       RowBox[{
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.772466708409417*^9, 3.772466727641757*^9}, 
   3.7724667628189774`*^9, {3.772466820588382*^9, 3.7724668635754128`*^9}, 
   3.773165892439465*^9, 3.7741926041188593`*^9, 3.775844765321795*^9, 
   3.7760491167437363`*^9, 3.7987392768477716`*^9, 3.798741249169245*^9, 
   3.798744836261318*^9, 3.798745136220858*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"71ff91e1-0a18-4436-b4bc-b1b3543f2f80"]
}, Open  ]],

Cell["\<\
Scale fit parameters for y axis in order to get a reasonable result that can \
be represented on the same plot as the earlier work\
\>", "Text",
 CellChangeTimes->{{3.772465963330209*^9, 3.7724659917137623`*^9}, {
  3.772468557694283*^9, 
  3.772468561393332*^9}},ExpressionUUID->"e98c394c-c498-48fd-95ef-\
43dd78c1d801"],

Cell[CellGroupData[{

Cell[BoxData["fitparams"], "Input",
 CellChangeTimes->{{3.772468626448835*^9, 3.7724686273552856`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"8c984721-1abf-4307-b67f-43654e136df8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a1", "\[Rule]", "5.789121269622872`*^-23"}], ",", 
   RowBox[{"b1", "\[Rule]", 
    RowBox[{"-", "4.3597447556414926`*^-23"}]}], ",", 
   RowBox[{"c1", "\[Rule]", "8.736258116598735`*^-24"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7724686283889723`*^9, 3.773165892453246*^9, 
  3.774192604218355*^9, 3.775844765334173*^9, 3.776049116785128*^9, 
  3.798739276861459*^9, 3.7987412491807013`*^9, 3.798744836271369*^9, 
  3.798745136284772*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"64eb9e68-857b-4156-9d84-6c09fed3df80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fitparamsscaled", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a1", "\[Rule]", 
     RowBox[{"5.646981085514258`*^-23", "*", 
      SuperscriptBox["10", "\[Placeholder]"]}]}], ",", 
    RowBox[{"b1", "\[Rule]", 
     RowBox[{"-", "4.303507488054951`*^-23"}]}], ",", 
    RowBox[{"c1", "\[Rule]", "8.721055534912068`*^-24"}]}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.7724686171378727`*^9, 3.7724686500580397`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"926a022f-71fb-442e-9b18-418c108377f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a1", "\[Rule]", 
    RowBox[{"5.646981085514258`*^-23", " ", 
     SuperscriptBox["10", "\[Placeholder]"]}]}], ",", 
   RowBox[{"b1", "\[Rule]", 
    RowBox[{"-", "4.303507488054951`*^-23"}]}], ",", 
   RowBox[{"c1", "\[Rule]", "8.721055534912068`*^-24"}]}], "}"}]], "Output",
 CellChangeTimes->{3.772468622130596*^9, 3.7731658925073853`*^9, 
  3.774192604233767*^9, 3.7758447653738422`*^9, 3.776049116799402*^9, 
  3.798739276901217*^9, 3.798741249220119*^9, 3.798744836323657*^9, 
  3.798745136302796*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"8b3dd0c5-1715-4887-a07c-e28921d8e405"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derfittedconvolvedmodelplot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"dscmodelr", "/.", 
     RowBox[{"Join", "[", 
      RowBox[{"fitparams", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"enc", "\[Rule]", "maxscatteredenergy"}], ",", 
         RowBox[{"\[Sigma]", "\[Rule]", "0.005"}]}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"en2", ",", 
      RowBox[{"minscatteredenergy", "+", "0.005"}], ",", 
      RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"minscatteredenergy", "-", "0.01"}], ",", 
         RowBox[{"maxscatteredenergy", "+", "0.02"}]}], "}"}], ",", "Full"}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Purple"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
        "{", "\"\<Derivative of Gaussian convolved piecewise model\>\"", 
         "}"}], "]"}], ",", "Bottom"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "\"\<Arbitrary Units\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.772466812102895*^9, 3.772466836994032*^9}, {
  3.7724668682226143`*^9, 3.77246687178109*^9}, {3.7724669040110807`*^9, 
  3.772466959051355*^9}, {3.772467288058632*^9, 3.772467288133299*^9}, {
  3.772469571674129*^9, 3.772469574004703*^9}, {3.7724700765365963`*^9, 
  3.77247007664082*^9}, {3.772470381194488*^9, 3.7724704357490873`*^9}, {
  3.7724704958562183`*^9, 3.772470496256888*^9}, {3.772470699437055*^9, 
  3.772470715914585*^9}, {3.772471433903693*^9, 3.772471446387561*^9}, {
  3.772471498877872*^9, 3.772471545469594*^9}, {3.798744644167308*^9, 
  3.7987446680144176`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"18de77de-fa39-45b8-bdc2-8405a519752d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
G9EbVLh9qGB9ldsFGxnueqCQSIU3RXGHD8i5YH83C6cVb1HhkO3pR6t7XbCC
IalS5tvonqy9LKMjuGC1bq1k7rtofgKR40P6Lphpzs6NlRQ0bwOqtYeRC2ZN
OF3cn0aFeuJJJ60NXbC2xDmt4XtU+KrjWqXiIRfs1S0+UHufCtUsf3U/0HLB
+A3OlrdkIf48MvstlVywGfuxe60PqdAotq5YTcQFI4jPrD7JpkLZwBrTbAYX
bCNV7k1RDhWOXlIfuf7NGTvYuMZ+K5cKH/xM877e54zNm3zv8MqnQhtJ4wNN
lc4YVyzvD98CKvxedRh7m+yMlQa9v2teRIVJD0tKSD7OWI1A3WO7YvS+/1Or
OKznjB32AYq6JVR4PehJhi6fMwbFP8mJlFHhLO71be5JJ6w0qipJ8gW6N59S
HF6UOWEZ92X8tyuo0KDObT/tshM27/EaY69C+0WvuxQOnLD6pOBrnK+o8OHn
bWuRv44Ys/fbhrka1M8S51/dFkes4dcR7+U61I/ag7igCEds+cCZxI/1qH/5
t2uvdByx3OEcuWqMCgNwc1Jsqw5YPZ4NX9eI7kXvU5v9zx0wGzXOgqxmKrT+
wX/L3N0Bs/8C7uS3UmFOra40J68D1reevJD/hgq/PPyovrvxONbZcvltdAcV
quzdN8IbeBxT00vhvNFJhW3k3qu3xI5jPOcNu8+/Q/tBtFMnvLXHTlnKr4b1
oPe1CMLCLthj8knyGeG9VHiwWefDDJ895h3R8MKlnwpTxa8+OozZYSKy8Vqe
g1RYXURUA652mPHlaU2zISq8L/pHL5rJDptT8ynGjVBhkaBuL1Zmi/1JF0lU
+UiFeNvehQ4rW+zWC7cvnONU6LbXUO/psg12PXL0uQgJfX8KWJ4FpdhgG8/8
p0UpaN9cuHiK9tpgcwk5D9eoVHh2yizUpOQYdkT0L/b3ExWaHQymVk5bY/In
Vx0nJ9G8WvT7FPdYY6Fb3D6NU1RYy8n70OPqUUzT9viXlhn0Xqfq6OrqrLAg
Z63xvFkq1Di1qviMwQoTEzQEpXNUeNjxp4wWtMQOR38TSftOhe48WVYliRYY
2eKlT+APKgznNU54M2aOzXQV4UKX0L4v3bxuImGOBWwcOOm8TIUewK935ZwZ
5kFZ/nvmFxVy1+97+rzsCPZeZkDYe40KD2jKrHf/MsVqBY48M1mnQqHa7UF1
S1OMkzhfcHSTCj97U3GRGSYYVVBVSnOLiv4PYCGCP4wxlZ6bbLzb6PvCXG6H
tzLGaAeEPQTpaNC1WXOH44kRJmQPNFfpaTC85N4FVjoj7JXC3Ys7jDQoM+TH
dMPREHtvy6hIx0KD1gl2PFLVBtiZ/fx2VFYaXLMIbrwobYB5vbWan2KnwaIA
gwStKH1smkt+u4uTBsuSowW5xiE2wKL43wg3DYY57dP48fQwpnna7OIYLw2m
XAq4fyDiECbsy0x7zU+DsgB/I8FPD/NUXHrdKkiDaRaumqNHAbYn4xJXsTAN
VuaRHTLMCFiwp/hIvCgN5s78OnHDWheT+zLPniROg2b9r52lTHUwaxHn136S
NHj2aA/rOwdtbGbr54fL0jTIxk6Xe9r5ILamX+YZvosG9Rynoqq8D2AJ2nR+
znI0mP82+nvOLS3s2ueYz24KNDhwpo1xrUATWz/0eMBYkQbjXtbpCQ/vx779
HtOSVaJBS9ELgvbc+zETL0NmnAoNShFYZZ31NLBdCSbHmNWQfucTzqdc24ed
dQ5j5t1Ng7P/TdAbhezF5BI79/HupUGxMP9W9q3dmKtf1cj3fTQ4088VNfdc
HWNi7JlZ3k+DfkrM9p+OqGGqVv9dHNWiQWN4XUmNXRXDzFx9Jw/SoEhhKuls
gzLWnu86PKVDg6/MzwerxyphlhW/69sJNPh+4vSzLR88diiwmbNXjwbf/oq+
V2+giL34LPux6jANLpl7yzfq4rDMl/mid/WRfk5WuB59BWxey6493ZAG41sS
yNcOyWNN5x/NhRrToNbX6UFfBzlsy17gv2hTGqSSaKEnzspiVQ+fx8eY0SDT
0eA+PqZd2Ez6BLO7BdI/96XqSKA0lqCvu+JtRYPLsfhvV95LYk+faJywtEb5
FE+fPekogemesjiIt6HBfT59Xp6/xTDC+5QoFTsaVC4SiXl+SxQj/gjS5zhO
g0JE/ozPR0SwwvaoAEFHGjxVzcptuSGE8RzFi2w60WBDRMlmR78gtrj/x/6P
LjS4Luixea9eAAPvv2DkkzS4x3XopPdDfoxFLKSp2ZUGp/pp02mP+DA90X27
e9z+6cvw+KYqLzYXws3f60GD5MEKE39Dbkw0Lj6g7AwNBmmkmOmlcWIVJio6
r7xo8OYT7biBEXasg+gT8cCHBpOvhV9tsmLD7G+/1Qw9h/bbd4SZncaCWQna
O4dfQHpsMgke92HG2i3D1074o/w+jeRXkkzYM+1eOq9AGvxV9pJE38WAMcQY
RHtdRP0K8V97fJseI0ceCzcKQfty4I39iyt0mJz6Lap5KA1Gx92OSyRuE6du
uzfuvkyDdP4tUoOdW0SBp2fYCOE06Mu9Z+t79ybxtfCNLr0INO9joQrZq+tE
CsGYQfo/xC+5ryXO5TfRX3BvseI1GtT5+UHCp2aVGJFT3ckZg+yzB11XjH8R
6W84n5qNRdj4jO380jJxRV7NdSEe5dPOv3L3/k/imYuZH/uv02CxUdFZd58l
4uEQjaaJmzT4Kft36aL3D2Lqh3lxchKab/3fre8a34lnpuAiMRm9Z1NqmrXx
HDH3eeu+tjvIHlnlduHYLPGkHGW+KAXlL674ceLhDPHOmphUbBoN2igFhn1l
mybuvhb7OuEe4vNi39nxi1+IFsSEPu/7KD5qScCOd5L4objWJigL3Yc/AuwL
xZ+I4+YxVk4PEe7L+uM8SSU6m/k1amUj/QbW6q8+IxMNN+MfEnJosCUr3m/A
e4JYclr7p3Qusg9SJWWCx4hRYaKvVPJpUP+U+t5P4aPE7nnR72oFyD9+x06x
Yph4T7DqMWcRyn+lxeS+3BDx3Y9wTLAYxePZ7sSnDhL/iyTZbTxHerzfmw+1
B4jPfVzdRkpRfCzdnhO/e4n6LNxj4+UIu/yNKYrsITo4OXZjFQhrb5w3dX5H
HD3Zq/z2JcKTPfi4/Z3E/sazW2+r//HjF/yo30E0/ZBhXliD5n/mGn1e+hui
8sNfDGV1yN9UMjZvupWYKLRwIKUe+Vf8fX8kpIXoYCg4ko0hfwd9v0GGJuKD
XpdvTxoRvllPjPLBiCc5CZejmxH+MUFpU6knJm4duZjYiuKTNOJUFmqJB3IX
pwLfIMxU/SWZvoboklfXa9WBcCxn5o5xNXHWoVzerhPFy9x/lZn4krjWoPdT
6x3CJb68ydyVxMCPG2r6PQgrvTrhqlROdD/2kWTQi3Cy0oOl6BJif7g1s1w/
winZ50P1ioklTisPlQcR9rAWL/1TSGSc1SjhHvqXj0FqgqeAuLlr8rjwP6zF
1+zFWkBcdkrbkfqHI0M3V3aeEj91Lh9X/4fP/Two9vMpseFZ9Y7FP2x5puLa
0FPiJZ8DDjf/4Uc5U++ynhKnZnToGIcRHr+Wa6L4lEiS+VbC8Q8HhtfIyzwl
fnB84CDwD1NSzBhEnxJb3m6UyP3Ds5+nu9ieErOLiA76//DR+zMh3/OJDt56
pf/9w2YuR/Vf5ROtcr47JPzDAXunjMvzicaj2XS3/2Fuj++WRfnE/aZ/HbL/
YfjiqEdWPpEH30SH/cOMk4eeR+YTmU8HlLb9w/Nx5q2h+cStDBnH7n/Y4WAL
KSCfOMd8rXT8H04pnRf1yCd+PrTX8fM/7EXN0T2RTxwLpdF9+4fb6Imu9vnE
/vK7pUv/r2etF2+VT3w7DR3X/+HiLVy5ST7xf7vxrzU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126757#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.3633668316630884, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\"", TraditionalForm], 
       FormBox["\"Arbitrary Units\"", TraditionalForm]}, 
     AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 
      0.4973736613779425}, {-8.358892876157485*^-23, 9.453253483888813*^-24}},
      PlotRangeClipping -> True, PlotRangePadding -> {{Automatic, Automatic}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Derivative of Gaussian convolved piecewise model\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.772466825960887*^9, 3.772466872141068*^9}, {
   3.7724669259411297`*^9, 3.772466959729948*^9}, {3.772467285064309*^9, 
   3.772467288793893*^9}, 3.772469574567932*^9, 3.772470077413368*^9, {
   3.772470382072954*^9, 3.772470407955327*^9}, {3.772470475597767*^9, 
   3.7724704993594646`*^9}, {3.772470710167447*^9, 3.772470716564765*^9}, {
   3.7724714347422943`*^9, 3.77247144887531*^9}, {3.772471499834155*^9, 
   3.772471546099328*^9}, 3.773165892831176*^9, 3.774192604685659*^9, 
   3.775844765684898*^9, 3.776049117149702*^9, 3.798739277209538*^9, 
   3.798741249527516*^9, 3.798744668759531*^9, 3.7987448366508904`*^9, 
   3.798745136638103*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"94ff166c-614d-47b0-8a22-01859a1a2404"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"comboplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "kndistplot", ",", "fittedmodelplot", ",", "fittedconvolvedmodelplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"maxscatteredenergy", ",", "Thick"}], "}"}], "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Scattered electron energy (MeV)\>\"", ",", 
       "\"\<Compton scattering cross section (\!\(\*SuperscriptBox[\(cm\), \
\(2\)]\)/MeV)\>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Pane", "[", 
      RowBox[{
      "\"\<Klein-Nashina Compton scattering distribution for Cs137 gamma rays \
and models of detector responses\>\"", ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "900"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Theoretical Compton edge at `` MeV\>\"", ",", 
             "\"\<0.477\>\""}], "]"}], ",", "Gray"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"maxscatteredenergy", "-", "0.03"}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
           "StringForm", "[", 
            "\"\<Simple piecewise polynomial model with fitting\>\"", "]"}], 
           ",", "Black"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.410", ",", 
           RowBox[{"8", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Convolved model with Gaussian distribution \[Sigma]=``\>\"", 
             ",", "0.005"}], "]"}], ",", "Red"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.43", ",", 
           RowBox[{"5", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", "\"\<Klein-Nashina\>\"", "]"}], ",", 
           "Blue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.39", ",", 
           RowBox[{"6", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "25"}]]}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
           "StringForm", "[", "\"\<Differentiated convolved model\>\"", "]"}],
            ",", "Purple"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.40", ",", 
           RowBox[{"1.1", "*", 
            SuperscriptBox["10", 
             RowBox[{"-", "24"}]]}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7724669650917253`*^9, 3.772466969265169*^9}, {
   3.772467336416668*^9, 3.7724673696300983`*^9}, {3.772468897775922*^9, 
   3.7724689373500423`*^9}, {3.7724691077529716`*^9, 
   3.7724691153945637`*^9}, {3.77246920376578*^9, 3.772469229202466*^9}, {
   3.77246934167852*^9, 3.772469356831258*^9}, {3.772469434935464*^9, 
   3.7724694427934*^9}, {3.772469589433807*^9, 3.772469590940887*^9}, {
   3.772470749771035*^9, 3.7724707534763393`*^9}, {3.7724707937302313`*^9, 
   3.772470850831851*^9}, {3.772470983392311*^9, 3.772470986942012*^9}, {
   3.772471042173943*^9, 3.772471055681498*^9}, {3.772471092006384*^9, 
   3.772471195557398*^9}, {3.7724712390516872`*^9, 3.7724712745838757`*^9}, {
   3.7724713059548063`*^9, 3.772471406570056*^9}, {3.772471865322897*^9, 
   3.772471875317092*^9}, {3.772471932973793*^9, 3.7724719603897123`*^9}, {
   3.7758447174643097`*^9, 3.7758447212505207`*^9}, {3.775845528689343*^9, 
   3.7758455292278357`*^9}, {3.776049095640635*^9, 3.776049128521854*^9}, {
   3.776049164429318*^9, 3.776049272372529*^9}, {3.7760493116382236`*^9, 
   3.776049418967272*^9}, {3.7760495449049053`*^9, 3.776049545050331*^9}, {
   3.776051265144754*^9, 3.776051266549203*^9}, {3.7987400355368633`*^9, 
   3.7987400408048553`*^9}, {3.7987412747290707`*^9, 3.798741275415024*^9}, {
   3.798741845734482*^9, 3.79874185745934*^9}, 3.7987449651450777`*^9, {
   3.798745007464302*^9, 3.798745007768717*^9}, {3.798745329913357*^9, 
   3.7987453416971893`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"e1dd5927-4e25-4a1e-9ed4-347208732baf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]], 
         PointBox[CompressedData["
1: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
uq9RKWPLt/1Wv8h46+PA0/INNPwHJd4k2Q==
          "]]}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]]}, {}}, {{
         Directive[
          PointSize[0.009166666666666668], 
          AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
          RGBColor[0, 0, 1], 
          Opacity[0.5]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$126578#1"]& ]}}, {}}, {{{{}, {}, 
        
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
2ZtRUfuRN2X7mf/7l61p8ioq6pvLP3tAuHrV0QvFFlQUXVzMEBJ+epk6u3UN
yT8//6g56XdGxxsT1XVUnLpz+0QS4bmPzfatWE/FHflyhXzCOeFGC85uoOLD
wRRXZ6Inc3tfvWobKnba2JYXEXZ/oreOaUfF4sPeC+YQfZ6QDuIscKSi32Xz
F0mElwjXPrBzpqJ0elmGFNE3l7Lxoe8mKu4e5y44RjivnLH44WaS/7j8r3HC
P4z+tVW5UbG7dqnySTIvm1Izf07ZSsU775wPKZL5MkmkWi/zoOLIJ6nDqYR1
Euw/OnhSsYIylDyfzOfMs2acq95U3F+5z+Q94esyZdMLfKhovzHSwZfMs/ap
1zV//KjIy9tAVSTzXzAuKV3vT8V9oSa9ZYQ/Tqpu8dlN9v9yw8qf+MWPKdP3
5AZRMeGvprMO8ZfH94fnNu2lonyqmuyn//uNhaLmt/2kX6tWyl8ifmTYmJm2
KISKss7/9W4hfnVG0GZme4iKFn6H3dSJv32dOOWZfJiKrT+lbg4SBvWdbz6F
UfF+867YBuKHS4g3DoZT8e3t901pxC/1dn60N4ug4mWWjP5Z4qfZSTtCPU5S
sf7YS3Of//vvyz1aOaep+G6k08uN+HMd8/Fk4RkqOr60LrQn/s1PO6euEE1F
39ORN1YQf59hT811PU/Fnlk6VebE/+vi3m8Pj6WieK0V3ZicDxda+Y6JcVTU
fLx4ZBE5PzZNjn/XeYmK65NLYi3I+fKgs8pj5DKZDzdt9jpy/vxOOXZkfSIV
ZxtNzd9JzqcAr92t569SUViQ/CX6Fhe2FvAc7idT0blmXvp1cp65/OI7CK5T
UYXqpvCenHedXyP3Kd6k4tnY4iM95Dzc/dqpaV46ma9eKXlZcn7+upr2POg2
mR+xa/j6jP/784mimLtUTOH+LTv4gAvOW2hrP94n9bXp6nxNzuNzxUcmzcgk
9Qpdc1yenN/WeffFS7KoGIU/KzGbnH9JTruO5FCR7rdY/TY573fLXxlKzqPi
+UK3iG5yH6g+7CTd9Zjo47hltzO5Pyzpsdo2/ykV7w1b7Sx+TPTGb23E51Q8
Na2/VJHcPzRZ1HfxBVSUOz/udu4pFzIDT1CfvqSi7barhjxyXzEd2by8rpiK
t5wn99i94ELrsdzpU0upWLvq49QWct8ZuZQ89b/XVOy42rBx7UvS72u/Eo5X
ED81fDrRTu5LXvfvbS57S0X/VUbc3SVkf8vPyzurqHh6wa5XXeS+JfwYn65V
Q8VIU1ujmDIuWI10zrWspaJn4DLJdHJ/y9Lx4LvXU9H7vM/btAqS/9rtK9Ib
iV94OfravyXnT//AvZJmKm4JfD2fQ+6D0knSSVKtVGx58Lns/jviL9VP7i34
SPY/pUqzrSH1/31lyLKD9E/J5IqQ3Dcr/ht4H9tJ/Hv/fstX5D7aI+wqy/5C
xSlGfW77G8h97t7WFRIKFRVSbvjbNZH+b5caXEmn4koT6d3zPnBB7eH6Blcm
FcOCCm9yyH24u+vfwttsKmap0/40tXFhbYF79psu4q+b3H+ntxP9xXF2f+4m
+WU+e7X7E8nHrS9Pk0f8QUr9i/dncj94Gj91tYDUr6QxwOwr4V95IzFCKlpG
9LhYUon+3f5q1/VTcfvFKA8rOhdyVwmDOIMkH/3V9w2YXLCd6W5qIKJizd3m
02vJ/4fQM27zHCRUtJn98++KLtJfZlvyzVHiF22nVb26ucDeEGtD/0HFXVOm
tJ3ikvUs2jTGxsn8mj79E8kn94UFaQetflFxPOTE2IteoveM0Z7APyR+8/kf
avrI/OtfvnPmH9Fb/aHp7QPEX9LvU95L0zD9h/Qm5WHSvwx70x5ZGnZbCtca
icn6t0NVTRRouONJl37UCLl/3P24MmwyDZ0cralN37mwcVntscQpNPw+bK88
MsaFwZJVa75Oo2HbZY9w1wmi11acNz6dhou2rX93+TcXXPvP2imr0LDq4aTc
yr9cuPpnndhdlYYJB+b0GUjzwPtBSsURdRruF7sPhsjywGhV0JS3s2jo/HDI
oVeeB1f8Wk5806Shx27zxnWTeTCacGDxLy0a6ld3hyRN4UHQi3ifDXNpeOdT
6h11JR4EBKwtCJhHQz0LQe1xZR7sVTx0qUCfhq7+x4/OmMmD46WUzJEFNFzS
4JeXpcYDlR9f6MoGNMw3fJGjPIsHxYvd072W0PCnTpV/iSYPevoDj0UupWGA
YOkmU20eaL96fv2GEQ1XPmRcfDyXB77hEeb0ZTR8EKJW6K3Hg//efx4fX07D
yG1HvnXP58E/+UK0XUlDszjGRO4iHrA31zXEmdPwxe/V73cv4YHjf4dCM1fT
8LWV9+4fS3nwZjz1jhBomHnVeEG9MQ8qtm8RTLGkYZPSf/oHlvOg9q1duB7S
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
IkyGoMx8wFB5CxP9JvbesIAhcO40Peq9lYlXt6+43mkzBMFSM2hRHkyExLw5
VS5DcH3lguh0TybWaHErz3gOQZ1PaT7Hm4lq950U1XcPwXl1zo9/PkyManYr
+h0yBPY1F+o37WTimSWv/r6NGIJZxwMp1/yZuHHKl/ot54cgrJwy6dluJrkv
BlSaJwzBV0nTmx9BTHRsb776/SZZv8I1WXMf0U9P+neZzCGouqKctzyYibFM
5YfdT4agevMmq4gQJpbyF3rdLxkCl2zdX6mHmKjQfjAyr2oIuAOHLboPk/UW
fclObB6C2LUTZfOPMvGU4Y2jdl+GoEB7tue6Y0z0sV9y1plD3hcVn46LYOLB
5qgG474hyNrGr8w7ycTvKjNe+o4OwcHqzdaVp0l/99Yq+f0dAtRbvVEmiona
DXpfLRWH4Z5KSbhuNBN3F/to7lMdBtkfBXrB55m4YPr092Fzh2E02GooMZbk
/3bzxobFwyDiK/7OjWNi6A+fTwMryHMPt6TBS0x8NsVINGI5DLHbjdYrXWHi
durnWmuHYdDeeOm4dyITlaYZGx53H4ZKe62hu1eZGGe1VHTSbxgGOjdcKEsm
8/dNd03dvmHQ3yp8IH2DiSdUh1xHjw4DN3ABc/5Nov+mz1uCo4ahIDLNc006
E6+UZJ4uuET2uxTvFX2biea3SjMY18n7C2acun+Xie1/ZS5tvD8MG0vUdfvu
k/n/3RGU9Zjsv9FdfmkmEy8xNZubi4fhTfjCqbZZZL1NCe/Nq4ah5trx1IQc
JnZvbBHGNw/DVksffJbHRMPKuil6X4ZhiPXu4K/HTNw0xnd/0DUMKRd8Weue
Ev0/UH8+3E++f5sUsuM5E02Opn0692MYJoTronMKmDhQ9D3/r5QIKnNjihpf
MvHkE/M4XwURJARLLf5WzMTFxrTWrKkiCND/Pc+glImrZ/j47VQRQW1wgoXd
a6KPO+vDKjREYJx352tKBRPnxG/bmKgtgqy+7uLPb0n/1LPf2+kTrqx8OVzF
RNHsy4seGIggP07TbHUNE3eZR/eHGokAOZMpXrVk3rQLXDgrRMBaZ1J+uJ6J
chv9is1WiyA25ateSSMTh3rmqMmuE8Gr4yqPPzUzMWOqdVSotQhELh+KdVqZ
GKIQtNPdkTwv1eyy+shE47FVf764iCDO4MHGHR1MXNhquRu3imDnlRzLh50k
3yAWdZ63CN6fRZeaL0yc+Pz0+IOdIli2z7NHmcrEmcfPZaYHiSB3++PXW+hk
Xno310YcEMEjStKLQ0wmrqObRoweFkGR88iSMjaZ70uK7n3HReDoOvCe3kXm
sTjwyJlIEfTt0MmQdDPRou3WwI9zIri+o/XvKh4TaeKixX0XRdDQrxLlISB6
ur9E9VSiCOQOfzn3UMjEsZfb18ReF4Hzr/b6nn4mMnQKhsNviWDuLP+lfweJ
X5aml0tniODnosNqdiImds1EP8Uckl+Dqs5eCROFm383P30igrYd5k9KRpko
G30+8UOBCOzHrp34+YOJP3fHPGh/JYKN86P3aPwk+xv/7jn8RgRe1kPUXb+I
H811np1YIwLxiCg49g8TOednLrNpFMGN/KXr7v1j4nJ/j4muVtK/7bzUHmkW
moTM3DTRKYLj102VZOVYeP7TvsFnNBGUvJdSdFVg4UpW0TU2RwR/J+TtUiaz
8NnHTvXvPBF01mQ8fDaFhTmuvM05/SIoiCqL+TGNhR3ydgs7xSLQ/BAUO1uZ
hQ+tbf1vjxF9znWuX6bCwjkrjnXb/RHBpD0vEsJVyfrhailHZMUwfd2jsBR1
st5uPVUzRTHoTJnHYs1i4SL/BohQFkPZHsO9MnNYWPg9muumLgbf5sMrtLVZ
qMKOuK6iJYYp+ivP757LQoHT0AlXPTFYT0kQx8xjIefdS0cDAzHE8gN4Hfrk
+6GhujNGYvjYdGSO+kIWqlqZhrw2FUOupXrocgMWXlYqC0iwEMOFnFUOp5ew
cDRPJpmDYhDdG1p/fykL5cxOVjbZiiHoHuvUKyMW9kpTjqY7i6H7mrPF72Us
fN6lzhW4iaFfzWWW1goWYuKH8tbtYvid8PHk3pUsFI+5lKz0E8PsafE6j81Z
OP1l86boQDFUaVG63q9mYdn9lS/8g8VwSDd78bQ1LFyx/Wh+7WExPC6Sv2Zk
ycJAvxGtt8fFMOSSsdoGWTj34oJztyLFsJZdGnTJioXyx8d7x86LQf1v4Msc
axb+aH+6uP+SGH6oJMeIbFkoez6mfNdVMex+5Rau5sDC/t2/moNTxUD3d8o1
cmJhTO3NPZ53xOAtXeMTvpGFTzWk7jdmknyXt6244cLCu4MFL1vyxHBim1fi
N1cWrtIsven+XAw3o7WXLHBn4YyJKYy3xWLAteFc3MbCW/fWb6soF4O432lB
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
o/LfIgX4H5D6+HQ=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$126649#1"]& ]}}, {}}}, {
    PlotRange -> Full, GridLines -> {{{0.47737366137794246`, 
         Thickness[Large]}}, {}}, Frame -> {True, True, False, False}, 
     FrameLabel -> {
       FormBox["\"Scattered electron energy (MeV)\"", TraditionalForm], 
       FormBox[
       "\"Compton scattering cross section (\\!\\(\\*SuperscriptBox[\\(cm\\), \
\\(2\\)]\\)/MeV)\"", TraditionalForm]}, Axes -> False, PlotLabel -> FormBox[
       PaneBox[
       "\"Klein-Nashina Compton scattering distribution for Cs137 gamma rays \
and models of detector responses\"", Alignment -> Center], TraditionalForm], 
     ImageSize -> 900, Epilog -> {
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox["\"Theoretical Compton edge at 0.477 MeV\"", 
           StringForm["Theoretical Compton edge at `` MeV", "0.477"], 
           Editable -> False], 
          GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
        0.44737366137794243`, 4.9999999999999996`*^-26}], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Simple piecewise polynomial model with fitting\"", 
           StringForm["Simple piecewise polynomial model with fitting"], 
           Editable -> False], 
          GrayLevel[0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.41, 
          Rational[1, 1250000000000000000000000]}, {0.41, 
         7.999999999999999*^-25}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox[
          "\"Convolved model with Gaussian distribution \
\[Sigma]=\\!\\(\\*FormBox[\\\"0.005`\\\", TraditionalForm]\\)\"", 
           StringForm[
           "Convolved model with Gaussian distribution \[Sigma]=``", 0.005], 
           Editable -> False], 
          RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
        NCache[{0.43, 
          Rational[1, 2000000000000000000000000]}, {0.43, 
         5.0000000000000005`*^-25}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox["\"Klein-Nashina\"", 
           StringForm["Klein-Nashina"], Editable -> False], 
          RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm], 
        NCache[{0.39, 
          Rational[3, 5000000000000000000000000]}, {0.39, 6.*^-25}]], 
       InsetBox[
        FormBox[
         StyleBox[
          InterpretationBox["\"Differentiated convolved model\"", 
           StringForm["Differentiated convolved model"], Editable -> False], 
          RGBColor[0.5, 0, 0.5], StripOnInput -> False], TraditionalForm], {
        0.4, 1.1000000000000002`*^-24}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> GrayLevel[0], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {
       0, 1.1262680895601734`*^-24}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Klein-Nashina Compton scattering distribution\""}, 
        "PointLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
          StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", "False", "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                   "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                   FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  StyleBox[
                   RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                   False]], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
             
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
           "]"}]& ), Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Simple piecewise model\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Gaussian convolved piecewise model\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7724669760235033`*^9, 3.772467032742963*^9, 3.77246729783708*^9, 
   3.7724673703689117`*^9, 3.7724689024792*^9, 3.7724689378022842`*^9, {
   3.772469109210829*^9, 3.772469115899085*^9}, {3.772469208002563*^9, 
   3.772469226068054*^9}, 3.772469357874316*^9, {3.7724694363550177`*^9, 
   3.772469443222238*^9}, 3.7724695913546047`*^9, 3.77247038766418*^9, 
   3.7724704780041656`*^9, {3.772470750580872*^9, 3.772470753860075*^9}, {
   3.772470798298424*^9, 3.772470851285453*^9}, 3.7724709895657053`*^9, 
   3.772471057752035*^9, {3.772471093111597*^9, 3.772471195961084*^9}, {
   3.772471319968848*^9, 3.7724713265806313`*^9}, {3.772471373063929*^9, 
   3.7724714069886217`*^9}, {3.77247187003306*^9, 3.7724718758100643`*^9}, {
   3.7724719338383837`*^9, 3.77247196084545*^9}, 3.7731658929439*^9, 
   3.7741926047878513`*^9, 3.775844730951145*^9, 3.7758447658481216`*^9, 
   3.775845529803348*^9, 3.7760491172996492`*^9, {3.776049204388794*^9, 
   3.776049272760232*^9}, 3.776049371137498*^9, 3.776049422846031*^9, 
   3.776049545504274*^9, 3.776051267217476*^9, 3.798739277313767*^9, 
   3.798740041639995*^9, 3.798741249627182*^9, 3.798741456335476*^9, {
   3.798741846670183*^9, 3.798741857820011*^9}, 3.798744836790803*^9, 
   3.798744965878767*^9, 3.798745022648695*^9, 3.7987451367547197`*^9, 
   3.798745365508807*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"4c130259-a14f-4440-aed1-07aea44d3221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derfittedconvolvedmodelplot2", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"derfittedconvolvedmodelplot", ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
    ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"None", ",", "All"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "Automatic", ",", "Automatic", ",", "Automatic", ",", "Purple"}], 
      "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "910"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Pane", "[", 
      RowBox[{"\"\<\>\"", ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<  \>\"", ",", "\"\<  \>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7724694519041157`*^9, 3.77246956469436*^9}, {
  3.7724697227102013`*^9, 3.7724698636109037`*^9}, {3.772470053616737*^9, 
  3.772470053884836*^9}, {3.7724701734013433`*^9, 3.772470182401133*^9}, {
  3.772470241043439*^9, 3.772470262721217*^9}, {3.7724703120705013`*^9, 
  3.772470329562839*^9}, {3.7724705138524303`*^9, 3.772470583573308*^9}, {
  3.7760494540104837`*^9, 3.776049454659491*^9}, {3.77604949656704*^9, 
  3.776049513646583*^9}, {3.798744604989031*^9, 3.798744630641241*^9}, {
  3.7987448282972727`*^9, 3.79874482936456*^9}, {3.798744879066873*^9, 
  3.798744903482479*^9}, {3.798745369016123*^9, 3.798745428463312*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"3c890e8e-8b23-4473-acde-313491f97823"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1: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
G9EbVLh9qGB9ldsFGxnueqCQSIU3RXGHD8i5YH83C6cVb1HhkO3pR6t7XbCC
IalS5tvonqy9LKMjuGC1bq1k7rtofgKR40P6Lphpzs6NlRQ0bwOqtYeRC2ZN
OF3cn0aFeuJJJ60NXbC2xDmt4XtU+KrjWqXiIRfs1S0+UHufCtUsf3U/0HLB
+A3OlrdkIf48MvstlVywGfuxe60PqdAotq5YTcQFI4jPrD7JpkLZwBrTbAYX
bCNV7k1RDhWOXlIfuf7NGTvYuMZ+K5cKH/xM877e54zNm3zv8MqnQhtJ4wNN
lc4YVyzvD98CKvxedRh7m+yMlQa9v2teRIVJD0tKSD7OWI1A3WO7YvS+/1Or
OKznjB32AYq6JVR4PehJhi6fMwbFP8mJlFHhLO71be5JJ6w0qipJ8gW6N59S
HF6UOWEZ92X8tyuo0KDObT/tshM27/EaY69C+0WvuxQOnLD6pOBrnK+o8OHn
bWuRv44Ys/fbhrka1M8S51/dFkes4dcR7+U61I/ag7igCEds+cCZxI/1qH/5
t2uvdByx3OEcuWqMCgNwc1Jsqw5YPZ4NX9eI7kXvU5v9zx0wGzXOgqxmKrT+
wX/L3N0Bs/8C7uS3UmFOra40J68D1reevJD/hgq/PPyovrvxONbZcvltdAcV
quzdN8IbeBxT00vhvNFJhW3k3qu3xI5jPOcNu8+/Q/tBtFMnvLXHTlnKr4b1
oPe1CMLCLthj8knyGeG9VHiwWefDDJ895h3R8MKlnwpTxa8+OozZYSKy8Vqe
g1RYXURUA652mPHlaU2zISq8L/pHL5rJDptT8ynGjVBhkaBuL1Zmi/1JF0lU
+UiFeNvehQ4rW+zWC7cvnONU6LbXUO/psg12PXL0uQgJfX8KWJ4FpdhgG8/8
p0UpaN9cuHiK9tpgcwk5D9eoVHh2yizUpOQYdkT0L/b3ExWaHQymVk5bY/In
Vx0nJ9G8WvT7FPdYY6Fb3D6NU1RYy8n70OPqUUzT9viXlhn0Xqfq6OrqrLAg
Z63xvFkq1Di1qviMwQoTEzQEpXNUeNjxp4wWtMQOR38TSftOhe48WVYliRYY
2eKlT+APKgznNU54M2aOzXQV4UKX0L4v3bxuImGOBWwcOOm8TIUewK935ZwZ
5kFZ/nvmFxVy1+97+rzsCPZeZkDYe40KD2jKrHf/MsVqBY48M1mnQqHa7UF1
S1OMkzhfcHSTCj97U3GRGSYYVVBVSnOLiv4PYCGCP4wxlZ6bbLzb6PvCXG6H
tzLGaAeEPQTpaNC1WXOH44kRJmQPNFfpaTC85N4FVjoj7JXC3Ys7jDQoM+TH
dMPREHtvy6hIx0KD1gl2PFLVBtiZ/fx2VFYaXLMIbrwobYB5vbWan2KnwaIA
gwStKH1smkt+u4uTBsuSowW5xiE2wKL43wg3DYY57dP48fQwpnna7OIYLw2m
XAq4fyDiECbsy0x7zU+DsgB/I8FPD/NUXHrdKkiDaRaumqNHAbYn4xJXsTAN
VuaRHTLMCFiwp/hIvCgN5s78OnHDWheT+zLPniROg2b9r52lTHUwaxHn136S
NHj2aA/rOwdtbGbr54fL0jTIxk6Xe9r5ILamX+YZvosG9Rynoqq8D2AJ2nR+
znI0mP82+nvOLS3s2ueYz24KNDhwpo1xrUATWz/0eMBYkQbjXtbpCQ/vx779
HtOSVaJBS9ELgvbc+zETL0NmnAoNShFYZZ31NLBdCSbHmNWQfucTzqdc24ed
dQ5j5t1Ng7P/TdAbhezF5BI79/HupUGxMP9W9q3dmKtf1cj3fTQ4088VNfdc
HWNi7JlZ3k+DfkrM9p+OqGGqVv9dHNWiQWN4XUmNXRXDzFx9Jw/SoEhhKuls
gzLWnu86PKVDg6/MzwerxyphlhW/69sJNPh+4vSzLR88diiwmbNXjwbf/oq+
V2+giL34LPux6jANLpl7yzfq4rDMl/mid/WRfk5WuB59BWxey6493ZAG41sS
yNcOyWNN5x/NhRrToNbX6UFfBzlsy17gv2hTGqSSaKEnzspiVQ+fx8eY0SDT
0eA+PqZd2Ez6BLO7BdI/96XqSKA0lqCvu+JtRYPLsfhvV95LYk+faJywtEb5
FE+fPekogemesjiIt6HBfT59Xp6/xTDC+5QoFTsaVC4SiXl+SxQj/gjS5zhO
g0JE/ozPR0SwwvaoAEFHGjxVzcptuSGE8RzFi2w60WBDRMlmR78gtrj/x/6P
LjS4Luixea9eAAPvv2DkkzS4x3XopPdDfoxFLKSp2ZUGp/pp02mP+DA90X27
e9z+6cvw+KYqLzYXws3f60GD5MEKE39Dbkw0Lj6g7AwNBmmkmOmlcWIVJio6
r7xo8OYT7biBEXasg+gT8cCHBpOvhV9tsmLD7G+/1Qw9h/bbd4SZncaCWQna
O4dfQHpsMgke92HG2i3D1074o/w+jeRXkkzYM+1eOq9AGvxV9pJE38WAMcQY
RHtdRP0K8V97fJseI0ceCzcKQfty4I39iyt0mJz6Lap5KA1Gx92OSyRuE6du
uzfuvkyDdP4tUoOdW0SBp2fYCOE06Mu9Z+t79ybxtfCNLr0INO9joQrZq+tE
CsGYQfo/xC+5ryXO5TfRX3BvseI1GtT5+UHCp2aVGJFT3ckZg+yzB11XjH8R
6W84n5qNRdj4jO380jJxRV7NdSEe5dPOv3L3/k/imYuZH/uv02CxUdFZd58l
4uEQjaaJmzT4Kft36aL3D2Lqh3lxchKab/3fre8a34lnpuAiMRm9Z1NqmrXx
HDH3eeu+tjvIHlnlduHYLPGkHGW+KAXlL674ceLhDPHOmphUbBoN2igFhn1l
mybuvhb7OuEe4vNi39nxi1+IFsSEPu/7KD5qScCOd5L4objWJigL3Yc/AuwL
xZ+I4+YxVk4PEe7L+uM8SSU6m/k1amUj/QbW6q8+IxMNN+MfEnJosCUr3m/A
e4JYclr7p3Qusg9SJWWCx4hRYaKvVPJpUP+U+t5P4aPE7nnR72oFyD9+x06x
Yph4T7DqMWcRyn+lxeS+3BDx3Y9wTLAYxePZ7sSnDhL/iyTZbTxHerzfmw+1
B4jPfVzdRkpRfCzdnhO/e4n6LNxj4+UIu/yNKYrsITo4OXZjFQhrb5w3dX5H
HD3Zq/z2JcKTPfi4/Z3E/sazW2+r//HjF/yo30E0/ZBhXliD5n/mGn1e+hui
8sNfDGV1yN9UMjZvupWYKLRwIKUe+Vf8fX8kpIXoYCg4ko0hfwd9v0GGJuKD
XpdvTxoRvllPjPLBiCc5CZejmxH+MUFpU6knJm4duZjYiuKTNOJUFmqJB3IX
pwLfIMxU/SWZvoboklfXa9WBcCxn5o5xNXHWoVzerhPFy9x/lZn4krjWoPdT
6x3CJb68ydyVxMCPG2r6PQgrvTrhqlROdD/2kWTQi3Cy0oOl6BJif7g1s1w/
winZ50P1ioklTisPlQcR9rAWL/1TSGSc1SjhHvqXj0FqgqeAuLlr8rjwP6zF
1+zFWkBcdkrbkfqHI0M3V3aeEj91Lh9X/4fP/Two9vMpseFZ9Y7FP2x5puLa
0FPiJZ8DDjf/4Uc5U++ynhKnZnToGIcRHr+Wa6L4lEiS+VbC8Q8HhtfIyzwl
fnB84CDwD1NSzBhEnxJb3m6UyP3Ds5+nu9ieErOLiA76//DR+zMh3/OJDt56
pf/9w2YuR/Vf5ROtcr47JPzDAXunjMvzicaj2XS3/2Fuj++WRfnE/aZ/HbL/
YfjiqEdWPpEH30SH/cOMk4eeR+YTmU8HlLb9w/Nx5q2h+cStDBnH7n/Y4WAL
KSCfOMd8rXT8H04pnRf1yCd+PrTX8fM/7EXN0T2RTxwLpdF9+4fb6Imu9vnE
/vK7pUv/r2etF2+VT3w7DR3X/+HiLVy5ST7xf7vxrzU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$126757#1"]& ]}}, {}}, {
    Frame -> {False, False, False, True}, 
     FrameTicks -> {{None, All}, {None, None}}, 
     FrameStyle -> {Automatic, Automatic, Automatic, 
       RGBColor[0.5, 0, 0.5]}, ImageSize -> 910, PlotLabel -> FormBox[
       PaneBox["\"\"", Alignment -> Center], TraditionalForm], 
     FrameLabel -> {
       FormBox["\"  \"", TraditionalForm], 
       FormBox["\"  \"", TraditionalForm]}, Axes -> False, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.3633668316630884, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\"", TraditionalForm], 
       FormBox["\"Arbitrary Units\"", TraditionalForm]}, 
     AxesOrigin -> {0.3633668316630884, 0}, 
     BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
       GrayLevel[0]}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.3633668316630884, 
      0.4973736613779425}, {-8.358892876157485*^-23, 9.453253483888813*^-24}},
      PlotRangeClipping -> True, PlotRangePadding -> {{Automatic, Automatic}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Derivative of Gaussian convolved piecewise model\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.772470249545416*^9, 3.772470278654154*^9}, {
   3.772470317316834*^9, 3.7724703300940723`*^9}, {3.772470389618504*^9, 
   3.772470415977668*^9}, 3.772470481355688*^9, {3.772470515024091*^9, 
   3.772470584060946*^9}, 3.7724707204872*^9, 3.772471492347362*^9, {
   3.772471538306715*^9, 3.772471549708177*^9}, 3.773165893053625*^9, 
   3.774192604866251*^9, 3.775844765951858*^9, 3.776049117399102*^9, {
   3.77604920643232*^9, 3.7760492216715517`*^9}, 3.776049265821645*^9, 
   3.776049455083961*^9, {3.776049497667841*^9, 3.776049513985386*^9}, 
   3.7987392773939734`*^9, 3.798741249732731*^9, {3.798744607594125*^9, 
   3.798744627735571*^9}, 3.7987446719702797`*^9, 3.7987448368847017`*^9, {
   3.798744879678295*^9, 3.798744903789513*^9}, 3.798745136854083*^9, {
   3.798745369561717*^9, 3.798745428823172*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"c5d9d4a4-ba35-4c40-bf0d-39e72056d67f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"comboplot", ",", "derfittedconvolvedmodelplot2"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.772469584259527*^9, 3.772469601329185*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"5b15de6c-2d67-4b86-9d73-6a6db1add91d"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
           RGBColor[0, 0, 1], 
           Opacity[0.5]], 
          PointBox[CompressedData["
1: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
uq9RKWPLt/1Wv8h46+PA0/INNPwHJd4k2Q==
           "]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
           RGBColor[0, 0, 1], 
           Opacity[0.5]]}, {}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           AbsoluteThickness[1.6], FontFamily -> "Arial", FontSize -> 16, 
           RGBColor[0, 0, 1], 
           Opacity[0.5]]}, {}}}, {{}, {}}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large]], 
           LineBox[CompressedData["
1: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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$126578#1"]& ]}}, {}}, {{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1: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
2ZtRUfuRN2X7mf/7l61p8ioq6pvLP3tAuHrV0QvFFlQUXVzMEBJ+epk6u3UN
yT8//6g56XdGxxsT1XVUnLpz+0QS4bmPzfatWE/FHflyhXzCOeFGC85uoOLD
wRRXZ6Inc3tfvWobKnba2JYXEXZ/oreOaUfF4sPeC+YQfZ6QDuIscKSi32Xz
F0mElwjXPrBzpqJ0elmGFNE3l7Lxoe8mKu4e5y44RjivnLH44WaS/7j8r3HC
P4z+tVW5UbG7dqnySTIvm1Izf07ZSsU775wPKZL5MkmkWi/zoOLIJ6nDqYR1
Euw/OnhSsYIylDyfzOfMs2acq95U3F+5z+Q94esyZdMLfKhovzHSwZfMs/ap
1zV//KjIy9tAVSTzXzAuKV3vT8V9oSa9ZYQ/Tqpu8dlN9v9yw8qf+MWPKdP3
5AZRMeGvprMO8ZfH94fnNu2lonyqmuyn//uNhaLmt/2kX6tWyl8ifmTYmJm2
KISKss7/9W4hfnVG0GZme4iKFn6H3dSJv32dOOWZfJiKrT+lbg4SBvWdbz6F
UfF+867YBuKHS4g3DoZT8e3t901pxC/1dn60N4ug4mWWjP5Z4qfZSTtCPU5S
sf7YS3Of//vvyz1aOaep+G6k08uN+HMd8/Fk4RkqOr60LrQn/s1PO6euEE1F
39ORN1YQf59hT811PU/Fnlk6VebE/+vi3m8Pj6WieK0V3ZicDxda+Y6JcVTU
fLx4ZBE5PzZNjn/XeYmK65NLYi3I+fKgs8pj5DKZDzdt9jpy/vxOOXZkfSIV
ZxtNzd9JzqcAr92t569SUViQ/CX6Fhe2FvAc7idT0blmXvp1cp65/OI7CK5T
UYXqpvCenHedXyP3Kd6k4tnY4iM95Dzc/dqpaV46ma9eKXlZcn7+upr2POg2
mR+xa/j6jP/784mimLtUTOH+LTv4gAvOW2hrP94n9bXp6nxNzuNzxUcmzcgk
9Qpdc1yenN/WeffFS7KoGIU/KzGbnH9JTruO5FCR7rdY/TY573fLXxlKzqPi
+UK3iG5yH6g+7CTd9Zjo47hltzO5Pyzpsdo2/ykV7w1b7Sx+TPTGb23E51Q8
Na2/VJHcPzRZ1HfxBVSUOz/udu4pFzIDT1CfvqSi7barhjxyXzEd2by8rpiK
t5wn99i94ELrsdzpU0upWLvq49QWct8ZuZQ89b/XVOy42rBx7UvS72u/Eo5X
ED81fDrRTu5LXvfvbS57S0X/VUbc3SVkf8vPyzurqHh6wa5XXeS+JfwYn65V
Q8VIU1ujmDIuWI10zrWspaJn4DLJdHJ/y9Lx4LvXU9H7vM/btAqS/9rtK9Ib
iV94OfravyXnT//AvZJmKm4JfD2fQ+6D0knSSVKtVGx58Lns/jviL9VP7i34
SPY/pUqzrSH1/31lyLKD9E/J5IqQ3Dcr/ht4H9tJ/Hv/fstX5D7aI+wqy/5C
xSlGfW77G8h97t7WFRIKFRVSbvjbNZH+b5caXEmn4koT6d3zPnBB7eH6Blcm
FcOCCm9yyH24u+vfwttsKmap0/40tXFhbYF79psu4q+b3H+ntxP9xXF2f+4m
+WU+e7X7E8nHrS9Pk0f8QUr9i/dncj94Gj91tYDUr6QxwOwr4V95IzFCKlpG
9LhYUon+3f5q1/VTcfvFKA8rOhdyVwmDOIMkH/3V9w2YXLCd6W5qIKJizd3m
02vJ/4fQM27zHCRUtJn98++KLtJfZlvyzVHiF22nVb26ucDeEGtD/0HFXVOm
tJ3ikvUs2jTGxsn8mj79E8kn94UFaQetflFxPOTE2IteoveM0Z7APyR+8/kf
avrI/OtfvnPmH9Fb/aHp7QPEX9LvU95L0zD9h/Qm5WHSvwx70x5ZGnZbCtca
icn6t0NVTRRouONJl37UCLl/3P24MmwyDZ0cralN37mwcVntscQpNPw+bK88
MsaFwZJVa75Oo2HbZY9w1wmi11acNz6dhou2rX93+TcXXPvP2imr0LDq4aTc
yr9cuPpnndhdlYYJB+b0GUjzwPtBSsURdRruF7sPhsjywGhV0JS3s2jo/HDI
oVeeB1f8Wk5806Shx27zxnWTeTCacGDxLy0a6ld3hyRN4UHQi3ifDXNpeOdT
6h11JR4EBKwtCJhHQz0LQe1xZR7sVTx0qUCfhq7+x4/OmMmD46WUzJEFNFzS
4JeXpcYDlR9f6MoGNMw3fJGjPIsHxYvd072W0PCnTpV/iSYPevoDj0UupWGA
YOkmU20eaL96fv2GEQ1XPmRcfDyXB77hEeb0ZTR8EKJW6K3Hg//efx4fX07D
yG1HvnXP58E/+UK0XUlDszjGRO4iHrA31zXEmdPwxe/V73cv4YHjf4dCM1fT
8LWV9+4fS3nwZjz1jhBomHnVeEG9MQ8qtm8RTLGkYZPSf/oHlvOg9q1duB7S
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
IkyGoMx8wFB5CxP9JvbesIAhcO40Peq9lYlXt6+43mkzBMFSM2hRHkyExLw5
VS5DcH3lguh0TybWaHErz3gOQZ1PaT7Hm4lq950U1XcPwXl1zo9/PkyManYr
+h0yBPY1F+o37WTimSWv/r6NGIJZxwMp1/yZuHHKl/ot54cgrJwy6dluJrkv
BlSaJwzBV0nTmx9BTHRsb776/SZZv8I1WXMf0U9P+neZzCGouqKctzyYibFM
5YfdT4agevMmq4gQJpbyF3rdLxkCl2zdX6mHmKjQfjAyr2oIuAOHLboPk/UW
fclObB6C2LUTZfOPMvGU4Y2jdl+GoEB7tue6Y0z0sV9y1plD3hcVn46LYOLB
5qgG474hyNrGr8w7ycTvKjNe+o4OwcHqzdaVp0l/99Yq+f0dAtRbvVEmiona
DXpfLRWH4Z5KSbhuNBN3F/to7lMdBtkfBXrB55m4YPr092Fzh2E02GooMZbk
/3bzxobFwyDiK/7OjWNi6A+fTwMryHMPt6TBS0x8NsVINGI5DLHbjdYrXWHi
durnWmuHYdDeeOm4dyITlaYZGx53H4ZKe62hu1eZGGe1VHTSbxgGOjdcKEsm
8/dNd03dvmHQ3yp8IH2DiSdUh1xHjw4DN3ABc/5Nov+mz1uCo4ahIDLNc006
E6+UZJ4uuET2uxTvFX2biea3SjMY18n7C2acun+Xie1/ZS5tvD8MG0vUdfvu
k/n/3RGU9Zjsv9FdfmkmEy8xNZubi4fhTfjCqbZZZL1NCe/Nq4ah5trx1IQc
JnZvbBHGNw/DVksffJbHRMPKuil6X4ZhiPXu4K/HTNw0xnd/0DUMKRd8Weue
Ev0/UH8+3E++f5sUsuM5E02Opn0692MYJoTronMKmDhQ9D3/r5QIKnNjihpf
MvHkE/M4XwURJARLLf5WzMTFxrTWrKkiCND/Pc+glImrZ/j47VQRQW1wgoXd
a6KPO+vDKjREYJx352tKBRPnxG/bmKgtgqy+7uLPb0n/1LPf2+kTrqx8OVzF
RNHsy4seGIggP07TbHUNE3eZR/eHGokAOZMpXrVk3rQLXDgrRMBaZ1J+uJ6J
chv9is1WiyA25ateSSMTh3rmqMmuE8Gr4yqPPzUzMWOqdVSotQhELh+KdVqZ
GKIQtNPdkTwv1eyy+shE47FVf764iCDO4MHGHR1MXNhquRu3imDnlRzLh50k
3yAWdZ63CN6fRZeaL0yc+Pz0+IOdIli2z7NHmcrEmcfPZaYHiSB3++PXW+hk
Xno310YcEMEjStKLQ0wmrqObRoweFkGR88iSMjaZ70uK7n3HReDoOvCe3kXm
sTjwyJlIEfTt0MmQdDPRou3WwI9zIri+o/XvKh4TaeKixX0XRdDQrxLlISB6
ur9E9VSiCOQOfzn3UMjEsZfb18ReF4Hzr/b6nn4mMnQKhsNviWDuLP+lfweJ
X5aml0tniODnosNqdiImds1EP8Uckl+Dqs5eCROFm383P30igrYd5k9KRpko
G30+8UOBCOzHrp34+YOJP3fHPGh/JYKN86P3aPwk+xv/7jn8RgRe1kPUXb+I
H811np1YIwLxiCg49g8TOednLrNpFMGN/KXr7v1j4nJ/j4muVtK/7bzUHmkW
moTM3DTRKYLj102VZOVYeP7TvsFnNBGUvJdSdFVg4UpW0TU2RwR/J+TtUiaz
8NnHTvXvPBF01mQ8fDaFhTmuvM05/SIoiCqL+TGNhR3ydgs7xSLQ/BAUO1uZ
hQ+tbf1vjxF9znWuX6bCwjkrjnXb/RHBpD0vEsJVyfrhailHZMUwfd2jsBR1
st5uPVUzRTHoTJnHYs1i4SL/BohQFkPZHsO9MnNYWPg9muumLgbf5sMrtLVZ
qMKOuK6iJYYp+ivP757LQoHT0AlXPTFYT0kQx8xjIefdS0cDAzHE8gN4Hfrk
+6GhujNGYvjYdGSO+kIWqlqZhrw2FUOupXrocgMWXlYqC0iwEMOFnFUOp5ew
cDRPJpmDYhDdG1p/fykL5cxOVjbZiiHoHuvUKyMW9kpTjqY7i6H7mrPF72Us
fN6lzhW4iaFfzWWW1goWYuKH8tbtYvid8PHk3pUsFI+5lKz0E8PsafE6j81Z
OP1l86boQDFUaVG63q9mYdn9lS/8g8VwSDd78bQ1LFyx/Wh+7WExPC6Sv2Zk
ycJAvxGtt8fFMOSSsdoGWTj34oJztyLFsJZdGnTJioXyx8d7x86LQf1v4Msc
axb+aH+6uP+SGH6oJMeIbFkoez6mfNdVMex+5Rau5sDC/t2/moNTxUD3d8o1
cmJhTO3NPZ53xOAtXeMTvpGFTzWk7jdmknyXt6244cLCu4MFL1vyxHBim1fi
N1cWrtIsven+XAw3o7WXLHBn4YyJKYy3xWLAteFc3MbCW/fWb6soF4O432lB
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
o/LfIgX4H5D6+HQ=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$126649#1"]& ]}}, {}}}, {
     PlotRange -> Full, GridLines -> {{{0.47737366137794246`, 
          Thickness[Large]}}, {}}, Frame -> {True, True, False, False}, 
      FrameLabel -> {
        FormBox["\"Scattered electron energy (MeV)\"", TraditionalForm], 
        FormBox[
        "\"Compton scattering cross section \
(\\!\\(\\*SuperscriptBox[\\(cm\\), \\(2\\)]\\)/MeV)\"", TraditionalForm]}, 
      Axes -> False, PlotLabel -> FormBox[
        PaneBox[
        "\"Klein-Nashina Compton scattering distribution for Cs137 gamma rays \
and models of detector responses\"", Alignment -> Center], TraditionalForm], 
      ImageSize -> 900, Epilog -> {
        InsetBox[
         FormBox[
          StyleBox[
           InterpretationBox["\"Theoretical Compton edge at 0.477 MeV\"", 
            StringForm["Theoretical Compton edge at `` MeV", "0.477"], 
            Editable -> False], 
           GrayLevel[0.5], StripOnInput -> False], TraditionalForm], {
         0.44737366137794243`, 4.9999999999999996`*^-26}], 
        InsetBox[
         FormBox[
          StyleBox[
           InterpretationBox[
           "\"Simple piecewise polynomial model with fitting\"", 
            StringForm["Simple piecewise polynomial model with fitting"], 
            Editable -> False], 
           GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         NCache[{0.41, 
           Rational[1, 1250000000000000000000000]}, {0.41, 
          7.999999999999999*^-25}]], 
        InsetBox[
         FormBox[
          StyleBox[
           InterpretationBox[
           "\"Convolved model with Gaussian distribution \
\[Sigma]=\\!\\(\\*FormBox[\\\"0.005`\\\", TraditionalForm]\\)\"", 
            StringForm[
            "Convolved model with Gaussian distribution \[Sigma]=``", 0.005], 
            Editable -> False], 
           RGBColor[1, 0, 0], StripOnInput -> False], TraditionalForm], 
         NCache[{0.43, 
           Rational[1, 2000000000000000000000000]}, {0.43, 
          5.0000000000000005`*^-25}]], 
        InsetBox[
         FormBox[
          StyleBox[
           InterpretationBox["\"Klein-Nashina\"", 
            StringForm["Klein-Nashina"], Editable -> False], 
           RGBColor[0, 0, 1], StripOnInput -> False], TraditionalForm], 
         NCache[{0.39, 
           Rational[3, 5000000000000000000000000]}, {0.39, 6.*^-25}]], 
        InsetBox[
         FormBox[
          StyleBox[
           InterpretationBox["\"Differentiated convolved model\"", 
            StringForm["Differentiated convolved model"], Editable -> False], 
           
           RGBColor[0.5, 0, 0.5], StripOnInput -> False], TraditionalForm], {
         0.4, 1.1000000000000002`*^-24}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0.3633668316630884, 0}, 
      BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
        GrayLevel[0]}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> GrayLevel[0], 
      Method -> {
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0.3633668316630884, 0.4973736613779425}, {
        0, 1.1262680895601734`*^-24}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{0, 0}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       FormBox[
        TemplateBox[{"\"Klein-Nashina Compton scattering distribution\""}, 
         "PointLegend", DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
           StripOnInput -> False]& ), 
         InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                  ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                "}"}], ",", 
              RowBox[{"{", #, "}"}], ",", 
              RowBox[{"Joined", "\[Rule]", 
                RowBox[{"{", "False", "}"}]}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                  ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
            "]"}]& ), Editable -> True], TraditionalForm], 
       FormBox[
        TemplateBox[{"\"Simple piecewise model\""}, "LineLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
              ",", 
              RowBox[{"{", #, "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], 
       FormBox[
        TemplateBox[{"\"Gaussian convolved piecewise model\""}, "LineLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
              RowBox[{"{", #, "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
     TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1:eJwdV3c41e8btvfeO+M4ZkMUzqteOysZWZWMMiorosRXZkUqI1FJCMmICDkf
OyKyMsJZJSQSESHxe/v9da77etb93M/zPp/ryHkG2nkx0NHRMTLR0f37pdmL
x6toj8FouyPmv60HCDp+p1g0/uHmMRsB+wFCWvyTmzoI0+0+77zbaYBgWqN4
+8g/zHbb54zbAKFcZP99r3/+jR8S+gMHCBHjFsV5/7Dy6bZnKQMEUbfI9+I6
CG9fAs4fBgjHztOEOHQRLsnfXe8wSFDVGuIXBAh77khlBH8gxFe639zQQ/mp
ZdEpkUMExySeS6OHES5KOXA8ZpiQLjrXQ9JH/n2hqxrZIwRrJ7fHTYYI15eq
7C0YJYRaMJDeGSN/5i++pm0fCUKPOm73mCKcY7OhSBojaOTIE0vMkP8Gzzbu
8zih/ni5XZUFstf0cR/+O0FoaRw8m2mFsBYtNYyFTIDxIt+DrZE/Hd7nMgeF
oLJ9kxZmg7B6wJE0HJWQqpph5WyHsCRr9ns1GsGLo1/R8zjCNQP/peA+EV4e
Ubnk6Ygwo+5oTuUnQoS2tJ6+8xjUr343q6f5mVA5cTjI9ASqJ0iim235TDi7
b1Na9RTyHxYakjeZJMTpftE+eHoMtpj0l5wfniRI5H5/q+OOMAVXKuLxhbC3
/m6/mCeK/5jvZTf1hVCZ4G4sdxbZo/MUHwVPESqYevazeiN8q+tJyO8pAv6z
w/0vPv/mlWRYGT5NYLvI4z17DsU/6Z3bYJkhnKt2r+i+gOyTOkeHkmYIB55/
Ojvij+JHcDX14l8J4VvRd0cDkX2x1ISp6CsBMGCaNReR/fzJFKryLOEcJm/c
EIL6u3/rU0ftLEFYCdeXG4qwwtScHvhG0F0y6Y24jPxHP0qLNX4jdPll6FwL
R3aClSOdxRxh9FGUtHsEyr8za3ald45wLCoj4Nx/CF9iMfh7cp5gKmiqa3MN
+VtarfB/nifUMIuG745BdrPdfUlnvhNSSoUVNeNQP2t3XvD9/E74xvjCQiQB
1WMSN8eHLhDKeS+R5W4g/EbhmxnTD8K3Kye+KCQi/+fvXvan/CAU3Js4w3gL
5V/K1JoRXCR0n7lpw3kb4a8zDez5i4SA6f7apTtj8NOuimunBZcISe3aae9T
UH03nQPnjy8RBJx6xwfSxqDs7xj/rYdLBLHsrYdV9/69J1rsKHmJkHjPpavh
Poqn/ZXQxv0kBM+Nnm/MQvb0c53m538SJpYXrj96iPhc+WZTUPqTUP5iP29+
9hh0f6XimrD8k7Atxc9/PWcM5spFmb7QWiYQD0tfS8tF+WbSqlwjlwmLjeae
GfkoH1zd39y2TMhf5G0OLUD2rgspvkwrhJZhxptRRYhfSX5QluUKwdUvtfts
McrfsLCb784KIdgDxhqUIH+P6zu6/SuEZXbJItMy1L8bzX5O+Bdh6WyKkcoL
5H/bKmHS6RfBJUTzqFYl4iN4VdfjyS8CgbbWc6Dq371YpU+b/kV4+Ne+XegV
ir8c/4xDaZXg1U9VlqpF/MSH+9kDVgkV9oys9K/RPL5rj9hUrhIuHjA7Qa5H
/Oy//TD/uUrI6SaKf8KQP//JW++01wjmAp12rY2oHt1nptTwNYIbN/16dzPC
R5ToaS1rhF/EYZGqVpSvOWbiEuNvAv3brpK7bxCfHpWuBuPfhPD4uZKMDpR/
T5rOrVu/CUGrhbjwTsSvjed6Xu9vwgfxuxwJ71B/LywdDwuvE8oeZXnd6EH5
d48Sbp9cJzANAIJP77/3d2lL4fE6obOOKyKwH+HpIX2DqXUCu93lAw6DCMsc
8SzCbxDemDN4aQwhPedYsxp9Ngizv4h0B0cQH95Em5MvNgjJdtwiYh8Rn7My
M/pLG4RHZ25nyo8jzH9pu0x7kyD/YfcdBRLiYyuq1vPfJkFpxWebnoJwW5+W
RvMmIbOzf4KNhvAt01Zplj+E69aD+xY+oX4SPqjamf0hLOxf+dM5iewCZcU6
iX8Izd2Gmj1TSM/fJs8L+/8Q+ITVp0pnEOb+df0E/xbhvYARfc0s8o/w/Jrh
vEVgebOS+WgO8ZGYxok/2iK8Hmh/euU7wlY1YdbkLcJI6hvJqB+on1ETSw6F
v4SLzKe4PZZQvylzW9xefwlX1OUv+C0jPZ4e08gq+0v4Xcl2OOAXwuYMV4eX
/xJWv95MOrqG9JV998RZa5tw+sNBI4d1xOeYjdmZiG2CSWBUKGET9VMx31vT
uE0oODcjJbKF6ucP+xC3twkBopH7JLZR/YX/4k1Mdgh1l0sb/+yg/L4gSuzG
DuHCLbY6ZoZxGK1Xv3mxb4eQuZWgyMI0Dlts2zoOc9ABQ9nH3FPM47BSuipy
VpUOOP/+7DHHOg5zhRlCHazpwPfolr197ONwSZF80juQDsw3vj83wTkO9T1F
4gnpdMDTeUOMwj0OZX0v1/rUovjCZoNGXlTvuudHnY90oL6werSDfxwODJTr
9m7SgSxng+lSwXGYohmXxCxFD5Z8F31vCo9DOvdr0/f16EG1eo/zbdFx6P6a
FDPvRg9+5eu3BYqPw30qbVxT0fQg9/2XzKuSiE8H2/iTAnrQbv9sMkJ6HNqo
h1W86qQHPreZnp3YhfiU+l/yn6UHoVfvfvSQQ/4OHVe/cTIAeolXMaYKyC7+
LJB9NwNgEd3IlVMch3xFFQGxRxlAWOcFdUWlcfjptFhFUxADOKt6RYNFBdXf
x0nNSWUAjfpV+bxqiN/u09aGNQwgg/367TV1FG8EyhNHGcD03qsLQ3uQXR6K
qP5mALns2fXj+5C+u5+23JZgBOMZTjsN+5HdNtUlAzCCqBH9l11aKD6Ppunu
xggeBVuMdR8ch0HE42LxsYzgYNvClRIdxPe7/bzlU0ag19GUUEVA/Myrd0bf
MoLWqypcWXpIv5ZsBpZZRtB0+xXrpcNI750y3jtsTAB/3D/wij7S+4L06XE1
JsDV22xzwhDxWRR91GXFBE5vwJyzxijfk2DxiCAmoBz3yd3LFNnFf+VdT2cC
Qc0Sj43MkL10R+zgKyagUBFrYmGB+J6/MFj8kQk42Mb77LFC/voeV5rXmcBy
UfUqwRrNw6jO/YEUM2A9wbhxyAbV59Wyfw+ZwcPm76EydkjPXwStp+7M4MEY
o5vSccSXKd/xUDwzECl41crtiOrtTveJKGQGnL0JD+acULxsaazAW2Zw4Xk8
ZdEFxUMFmt83ZmChI/3ow0lUL0xR9QIHC7h39Us7xRXpN36jVn0PC3CU6D5D
c0P6sfAfPWLLAu77WUQ2eaB4S9wH5mAWYBi8Tvf2DIpvyMy6kcEC/FT1d0q8
UH2TjKPltSyAR784+LoP0vdBPZf6RxYgyX7YLukcyid2mDtgkwU8i/cvvXAB
9V9htWUvyQpyqruDQv3R+wjB1P8eZgXc+maloYGID52tz44HK9iMcnOzv4jy
FQWlFMayAvuLBddcQtB7u7y0yVPEClRF4sQPhSLssWkv1ckK/ALu7jK/jPq/
fPbH9zlWgMc1PLQMR/ydVtNEeNiAW3LsXbUIhI/x4af2sAHG4rAlzf/+1b+1
ecmODSiGMfWIX/vHL6XxeQgbaM6rkliLRrimIUn7HhvoiL4zuhmL7sFXswc3
69iAuQATFyUexe93u//fGBvQcXpW/vU68i8eGT6wxQaebJxvn72J/GeDpY/s
YgcJ1l3HO5OQfgYPj29BdjDqaG/bl4zm2SHXe+kMOyjkv9JZdQfFe2pqpcaz
g+8qjVW3UxDfdxcKWQrZwZPVvRypaSjfSSZn2MUOBkL0SBfvIX8WpQ3Jb+zA
rzBMLOI+0oPynIRxcYAbiRb9HllIv97asp3dHECi5/Cfww8Rvj53I9uaA4i1
uKcbZ6P3fj6qYOsiB7jnI1WolIP4+WZX0KVzgMg2ZgXNXJQ/VWKrs5YDkK/y
ihzIR/Xjm+1mxzkAcboqVqgAzTflR2bZJgdgZIo/KVWE9O/8T0ZLhhP0DP8o
py9G71c0M90NcgJOxquhlOdoX/Z9FJhy4wS1U/uffy79t4+Xh9TiOAHtSoLj
m3KUbzgvVrSAE1xqYQ7qrUB8T6uHvO3kBDFeRdu9L9G9fEnx75vjBFyNn1jK
qlF+aXGnq5xcgKHLLKKqBs2j5lXMtz1c4HKCxbn7dYiP18TDrWNcwGkt/E1+
Papv4L76IYQLVLS/SyvEkP5fuU4wZHKBBJNqUkIjql9kVD5SxwU6w7tT7jSj
fUyZMPAjcYEb7hHNl1rRPNL/tBdtcYHmAqsztm9QfjcjO4I0N/DMtgxx7ED5
neZlU/W5Qbzp1JZOJ9LPV5p6y4Mb8BeULBu9Q/kKK8jmCdxAxC3V1aQH1S/1
nXYv5gYP3vMb4nrR/LpLyZLvuMHNheY0tX7kL3xM+OF3brDawurKN4jyXYnU
a+DmARM/A7PnPyA9Cgf8tffwANVRZrPFYaTndvynUFsesOF3wH9gFPELfGPg
HMwDNOvStsfHUD0uz6m/GTxgvjqRvXUC5W9LCj1SxwMkefISc8gov8EE39xH
HlAnORNaQEX6LyQuHPvDAwZJ7aQbn5C98s1rFyle4HhssDx9EtXLde3A6/MC
e9ntXxlTiL+LDNnqDC/of9peEzqD5qN27rNIPC+onXg9+d8suocqQsoFz3iB
ZLtp4pm5f/fJ3HWkixesc6wWwO9IP5nCbLdvvECfeVDd+Mc4NMuovOPIwgdY
q0z34JdQvmf2pv0ifEBXYO7RvmXEv78o57kyH/jSXx6l8QvxOcUduY/AB7j0
OUm8a+PQd/W1TaIFH8g9c/+pyDrSq0DordEpPlCli01vbiA93Gr2D/jxAT1/
uscjf8bh7LVzOPb/+IDG8ZCWsb/jcL2mt/bpHT5QuHDNtX4H5V8P0+d7wgfi
CUTvNvoJmGUzcJ5ayQcmde98K2acgLI1AclRrXzg9f3YzwnME/BKlKxmzyAf
2CgqMLnFOgEHXGOvhn9B9nPuCgHsE9DZXKV+YwXF08z9wzkn4JhFdBaJmR/E
V9urR3BPQOWXc1vnRPlBoe7vsyd4J+BrhYfO3Ur8QCOki92TfwLql20cT9bl
B3pumspHBCcgm0GOmawFP2gubsLkhRE/gmOr+wl+UF54GcOLonwWTRMMfvxA
3KFbi018Ai55XZgPi+QHS3UWEgKSE7Aysyvb6g4/gFfmLwlIT0CdPbpDfU/4
Afe8ovmSzASkG/xBp1DJD0z57ySuyU7ArsTj/WOt/GD7212jCXmErXfuuX/g
B3JhzedmcAirnPhjPsUPGtx4mb/hEZ9zXTO0VX4w8mdd/J0ywjUR746wCAAX
S75Hg6oTMEWUZsUvJgBOHW3NqFNH8Qk3OsuUBcDHsjTme3uQfs5Gnb90BEBj
c+rnrH0IG1T45FgIAPkEVe2I/ROQT9t9R/ykAFj+u7SeoDUBzQxbtX/7CQDC
8Me9Nw5OQJuqA6vRUQKAztX5k5cOqrdn8Tn5jgDQeMDy14+A6rU47zzIFQCf
b1in2+qh/t1YrVReCgD24doc9cNonp7vpL1aBUD2kJXIPn00jwiQwjAkAF4k
RLLyGyL/vOWNi18EgNr8+FkJ4wlYTHZhMloVAHjGQUBviuaNY2GZYRYED67M
3qAeQfwHOpIPiAiCy3m79afM0TzTD7yaURIEw5FcwZ2WaD4ecx/O6QiCbE5x
vqGjEzDX9FiatYUgIP82URg5NgHFUjpHaScFwaP7XJWvbFG+6XgBIz9B0DFL
97zBfgJG2y7/YI0SBP4LdyTzHSag77uCtpw7guD2sUOMUU5oX4vOS07mCAIx
L3GnWBcUn/VJ6EalIJDffRd39iTqL/MR83aLIMgs3n86wBXVL2PJHP0gCOJj
1rgC3VA/+ITyk1OCYJHr+IGjHkjvMjOs6pcgeGtJe2d/Bulh1nDuAosQkDzE
NKbthfyXLvGuiQgB0mdHO2MfpOcLisOkshAQnHpncOTcBHQfdJGLIAiB7qzR
EqULE/AmneTUtIUQ+E7HH73PH+2nSfKRqlNCIFlyuk8kEO17pmG+jb8QKEgf
T1sJmoD7jnLFPvpPCCg3/2lbD0b1xK8zmN0VAqqP6/xIl1A/P42vvn0iBDL3
5MXOhCH9PlWnFb0UApHSpdyzV5D+mgf3ab4RAp+arAU6r6J+0/62pw4JgQpB
2bi+SFSPLXTTdloIbEnc8q+OQvubqKE0tSoEWq+J9N6JRu8jiH5cnkUYLGf2
Z6XFIr39YtTeiAqDPE95akg8soeahh5QFgbYp/y7/11H8emYGztBGBxtMKr9
7yayixr3J1oKg9MWUY4nk1D9Iv6D5JPCYOLWjKdHMuJndfdQir8wGL42O2t8
B+37tq2eSJQwICiJkWxSJuCnjnbS37vCQEzd19A+Dem3bEGXlicMLn2xVdC8
h/RVE5FafykMgPW5IHAf6XU1daz5jTCIuSChLZeF8o/YJrsMCwM4Mx/89wHa
jwzFjidTwsBXaF6CIXsCrp9/nnNkTRjwrsbpTT1GehwNDmxlEQHyiRbdP54g
PU3mP2WLiYDyqxq9i3nIP+/yR5yqCKiVqTLve4r4cpp3RBFEgGqY+/6RQpQ/
qdueYCUCpKOL79U/Q3oJp453nhIBN7/y+d17jvaX+cIUvb8IOM3wrCKzFOnF
uXr3cZQIqOof9btSjvqVbt/PeVcEBNto3Y+pQP2YGoVN5IqAyjg1Xd+XaF+u
sr6MeCkCvIWMbE2qkb5CtKB3rSLghvPNEYsadA/eeA9eGRIBSsd8hnbXofsb
pamy+UUE7N8IOaRbj/bHplKOsioCaujypACG8l3Xf+LHKgpqiT6hEo1ov98J
C/WJigIF5VME+eYJ2CL3SCVVRRTwmM1dYW1F/K97HcQTRMHFjiz1L21ILxuj
Lh8LUQDXLll9bUf3Z+/gJscpUZA8Pjfd9RbVkyzARfuJAuOgO/MfupCe0kqL
jlGi4NJZO++hbnRP4hoPT9wVBfKclSdevkd6rWUl7M0VBXpeAKvrQ/1fw/nP
vBQFwxfdMx4NoHsvtGoZ2CYKPmpUk559QHo3h/a4DIsCu2P4zJLhCTjbxz6w
NC0KrHZpvk8aRXhussdlTRS8zPf3Tx9D+kr5+eLYxMC9MYOb4RNoficJWy1i
YmDxwkExR/K//ZMU5lARA7VVzkInqYhvXXnfK4IY+FMqlHToE7oHkfHXNCzF
QKnz9gWzSaSHE+cgr6sYGPJke2M+hXBm4bOHAWLg6q6ydOUZpN+X+NDfUWIg
+e5/A3tn0f6YCE3VpIgBqarZ60JzaH9fzZqb5okB3P5LVYvz6H3cGNCKeykG
srx2W6wsIL5Bvi1yb8RAkmX0yeFFNF9vE6O0ITHwdYpunPIT5b/4wfvstBh4
s09yoH0F6ZdYEMO2JgZEJxz08ldRPHOSnAuLOBg92CRU/BvNI2uXJ6eYOBA0
bfG+tYH2R3vzwV1lcdDAtoTL/IP2YT4+OJQgDijK+s4P/iL9mRUGWK3EQeQf
FebwHbRPqiyKfqfEwfUYA5kYehK86f1AYn+AOOAlLld6M5Jg0IuLrN1R4oDP
pv21ITMJyp50Dee5i+IfvFE/wkqCY9Ibt17ligPvjFMSKuwk+Pr7eIb6S1Tf
WOGSJicJFg+e12d5Iw6SbDmMtLhJ0F2SNyh5GPHnu3VLgJcEzS6u35+aEge3
43T1xflJcB8l9XTOmjh4UxwT8FeABJ0dgqRVWSXA2ZjfbBzCJHjly3akqLgE
+K/uthi3KMo3muvxUlUCCOU25i2IIf4jNw5JAwkgqieZuSaB6s/JEOesJEBW
kgALRYoE2bj+7E5ylQCpB1Xn6mVQvbQ5/Ki/BFjNCCQ0y5KgzZ6klrhrEmDs
mTVTvjwJVo4G2DKmSAC8/0lCOY4E+TIY46byJMD3uzenX+BJUOd1qW5wtQTY
53WM444yCWZ9zfo6+EYC0BaMHmWokuCS+sGD6SMSgFvlQ+FVdcQvSiwSPyMB
qlujFR33kOCsFs8R7zUJ0M7tyn9iH9KD/lUVK5skOM41FAb2I/t4jnCEmCQ4
1hRmZqJFgtFduuI2qpKgrZdw1+QgskvO5g0CSVB9N+uYgg6yR5DkFK0kAS8z
LlKFQIJiP6MMJ1wlwZy6uTy3HvIP9jnhESAJ9rFla4kfRvPioBO0iJYEP/R5
GyT1Uf+sZTa0VEmgpi7V+McA6cP3OME0XxIMdTuqMhmTIN3ewyd5X0mCDUk1
/jkTpOcJnHJJuyTI7N7l//YICX76Jn3157AkyFU3PNBjjvS72+n3cEYSKBts
h5VbkmCLQa2j8G9J9P97Fvf6KAn9VXT4/JNNClzfs3yk/hia10HWn1clpEAQ
y/2pTFvEL3D794iqFOhI9VnIsUf+TYVP0vSkQFb/h8A4BzQPibTDckelwJfz
p31OO6H9nEj1POUqBR7Ui/Z4uCD+lQZKGwFSoI94vtjwJNqftINffK5JgYDA
+Z+WrohPEpphqhS4Pcpcs98N6X+3I30CnVLcI/0FXg80z/U2P5UqKYAXfJ4q
fAb1dzloZvyNFCg6VFqxfpYEfRnPOJ0algKpkiRdJh9kL2A+pz8jBX45qumy
nEP1S7Gdgd9SYNRYuGr6PNKjsfa2Jps0UJhRz1zwQ7VnPBp+i0uDRV3q6ocA
ElyXsJu8rSoNNOcr3r0IQvN85XB7gCANJo9VsFcHo37Pso9fspIGvD5mb+5d
QnrsYpCaPyUNnmnwfssJQ/4/S3baAqRBncta3JMraD7KPr5HoqWBqdblrP+u
kuDAed+uxynSQL9NUTw+kgRT3oi/c8iXBvUMAYK+UWg/lflaaVXS4PHal/BL
0Sjf01qXnnZpsHHkqsPlWKRPXNDlM6PSYMiypMQpngT1AwOTe2ekgRgjm5/7
ddTPRRnDB+vSgOy3U2R6E+lzTWDxILsMENMSdVJAWvsui8vFiMuA5henQpST
EY4YXFFXkwHTJMDOeYcEc/n6GkuADAhrMOMUSUF8savKSUdlwLXN0FjRNIR7
CGIibjKAZV4vZC0d9TcLd0ICZcD6HY2BvxmovsTqdc0YGXBuurloMhPtk/Mi
c0eqDLB7ELDc+ADN588WO2O+DCiisyxpfYT2pYb4Ir9aBlyRaCXlP0b9X220
EGqXAbVfz4aXPUHzcAi68XVEBgT75Kek56F9OOSLJc+geGM66YtP0TySQi5R
12SAycgt4cuFaL++7+lLZdsFzoi9vHHiGQkqn9y7S1R8F/jOw+Tt/Rzxp9H4
tlV3gQXPy/W+pUi/d09vpOrtAn7n4q+blaP32VS2uma1CzgpNDfbVKB63V5M
Tad3gZa76cEHX6L8k2c4nAJ3gTyXmw8FqhF/t9CM7Gso32jJHtEalP/nwVaj
1F3gNYuP3kYtCTakHJpqyNsFfnyzqWWsJ8FMk1/PMqt3gWzVk4VMGAkecWta
kunYBbqkd7i/NJAgPqF335WRXcC9fWDyWxMJirQm82t+3QXCpPU0+lpIcD97
6rfm37sA03Dnr+I2EuQ8efzpFqMs+HsoBlfWToJRejry3VyyIPTEcG/yWxLk
KWjKphOWBc6qDl8yukgwR+Tx16/SsqC+LDA4spsETXll9ujgZUFackmYy3sS
PE5Urju9RxZ83CX49XQfCXoH3eI7qC0LHnoJDxoMkGBGWYpXGJQFXadNlI5+
IEHiykKSj5ksCKjJWLYeJkGrheHlPbayIL3pmvaeURL87Xfa0c1FFihEZM4e
GEP79Rsm6XvKAo05M0HJCZSfrb0+6bwsqKuVqF4joffQM6hWGiwLnh+UaN6k
oPwPtAMiI2SB+LlqYzKNBHcWYFltnCz4ZX314MxnEjx8NJeYlywLjqR5PJ75
QoKTp5M4z2Qg/5uT/7VPk2DBmojz7ceywFEjtbv7K/pePfhzybdIFvDfHk95
8Y0Etdpib5e9kAU62cfeEOdJkGHNIyyvDvXPNnO+cQHtM7k7z68F1VMSSX68
iN6j2WhXbpcsiNwMES/6ifg167YkDMqCuGsXZJNXSFCgEVYPjcsCBs+4bN9V
Emzz65/9/VkWfP/dFe//G/WrVPfj/ZwsOK5fPHNsA83X12CJY0UWKOvVvDrx
hwTLqxXaNv7IgksZk79P/iXBhy/vjjYxyYHDec9fEXZIMOlAzsx3LjkQ4p5D
MaAnQ9t2ps4eYTmg9EE9Gs9IhhLj3E8FZeSAfR4pk56ZDFVyc1s18HJgTuG1
JDMrGX67eKuSbq8c2HHeIz7DRoYP34k90tGWA9EGH2IXOchwXG3bQU5fDlwj
83qPcpHhpuB1rhAzObA27N9UzUOGii8ymR/ZyIGx6I3Yej4yTLGj7w9xkQO6
NJnWbAEyfBXJfa/GQw4w/7x4oViIDN9UXlQpPi8HzN2nk0pEyPD4fTf6iyFy
gDN2WSFJjAw96ZeG8yNQvNNulTQJMrwfOnYlIV4OTFPpiy9LkeGPgDNig8ly
gL197ZG9DBlqil/ZXL4nB7JOiW85yZKhe89UWcdjOVD0bGREV54MZRl+naAv
kgO7ipoljXFkeBaeHF94IQf4GLpHjfFkmKZm9bCyDvXHF8CpoEyG1o9ojuRm
OXDiAyxTUUV2np4vr7vkQLVp6VtudTI8zOTitz0gBy4HGB+V2EOGypuHO36N
I/vKXzPpfWQo8/CFe+ukHAhQs236q0GGOGLL77U5OXBP5MMTFi0ytBhSdaOs
yAGdV983vx8gw7fntNvUt+TA8QqlnnfaZNhX0OtjxyQPyK4prP26ZJjTi1GU
ueXBZFNa40tAhqkBVsd8heWB/VAbreEQ0mNJK9VZRh7omQheboJkuMj8THiX
kjwoOPf3xmMDMqxKwjKs98qDywbCzIVGZGgzqjSzR0cedPW8/ZNoQoZjNw7u
v6IvD1Krs3y8jpChz+u+lkwzefDWOgueMyfDPdebdvnayoPwbI1UC0syLHpm
czXPRR5kPl63Pn4UzVeXUHjLUx7s3qLFHD9Ghskc5QJWF+SBIbfHnv22ZCgs
0BYRGiIP2gZ5j+jYk+F5tT01xyLlQYuZ87ikAxlWuujNpcXLA9WQvo9KTmTI
cTBv8fptecD156ylqgsZ6rfe0ba9Lw/8DmTocJwkw3w5mYj4HHmgrbCSKuCK
9HBlvOv7TB7EvJk7u36aDDtxSTk1FfLAqJWhfNidDPlYHyyN1cmDoGAzj3FP
MtwXuyVQ3iIPJEeV7mJnyfADI73GXJc80FjQUnnrjebX7bxrbBDx8/DU6fQl
w+tdB22yJ+RB702V1sLzaD93XkW+m5QHJmdkasv8yPBRXVz4s3mk/1IZLjWA
DGn1Py/+WJEHpRMn2fyCyHBBdKqMc0seJFzRcQ4MJsOmHvnX40wKgNL1Qs7m
EtJTeaeJj1sB5L63c3IJI0O1WIX768IKYDI2hUX/ChmGZXzxNZdRANn3f6hK
XyXDZWH5qCC8Amh1vYrJR5Jh4sSTM2Z7FYDXxycdzFFkeGWnxjhRWwFcYloB
/NFkyOTKsHZVXwH8ueOtJBiL5hPd8s3QXAHQvQ9JXo5DeIV/PMRWAQQ1vHDd
TCBDP50bWQ4nFICbW1wx7QYZzi4n2ud6KoC3bld8sUQy9O5Ytmk9rwCyBB/d
a75Fhm4GZ2XSQxTAt3AnQt5tpPcpl6+9EQqgMN3AqvQuGTIYg+j6eAUwzmE1
VJpKhiMtp05G3FYAt7SWhhLT0fvXX9EoylAAxfxt+ikZZGhEPDwWk6MAjPN2
K13KRHpa/Qh/W6QALKfehkc/IEOWcol5rEIBdMdHG8Q9QvcqhpBz47UC6Po4
FHvmMRlqF+dZNbQoAA3q8X1+T8jw/Yhwd947BSCWGehkl4feG1el4dKgArhc
XrKy5ymat92fLaEJBWBwWXBLsxDp61aVMDepAJJWhKNEnpFhzIwLu8q8Ajis
YOon95wMY692nxD7pQDOV97vly8lw/RFngXKlgIQXoouoy8nw6s318K5mHFA
7UvWKlsFGbI5+g7Nc+NA802L1wuVZLhto6CkJYIDPbeklrqqyLC1a5toJ4MD
hoZS996/IkPi8yfi8ko4oFNa87K8lgxNN/5ePLEXBx50RoK612TY9tQ13UgH
B8LvUw7nEMmQwDNUnqGPA4Ntp+siGsjQ+bcOS5MZDtzL586OaSLDyafmuExb
HBjRctw820KGZj6BhHEXHIi5+r49qI0MxbwXBd574kCh9BmmkHZ0L2JWcBkX
cMAsJL3R7i0ZnmAt3N0ZggOOkT8nT3SheYc7LT+PxIEv2t9i9LvRezzGV7Ya
jwOzNvT3pd6jfVNnyBa9jQPO0kdE5PrI8GagIpzLwAHTbDwf4wDy3/w8rJiD
A0/6NMO4P6D35KUsLPAMB4JOe9jyDKN7QzWJHq7AgZZc5aLvI2Q4t1E8sVOH
AxH3pX1WPqL7YGDcT2rBgVeHy/I+jiN/HvUK2Xc44G180raKRIZCWXRVYBAH
4v5q+9dQULxTmw7rBA7InHvBcJ+G9MzQLwSTOIC7acf05DMZ9r+kj5adx4Hn
LinXEr6QYUv2Q92AFRwouvkj0HMa8S3V+Zv6Bwd4Llx97/OVDNc/vmD1ZlIE
v3ae5Ft8Q9+74cSv+VyKwNRsZcphngzlVnCzd4UVAd8P72ynBTLkyqhvtZNR
BM6ml3oPLpKhS8m+s1F4RcBpV3H+8E8ydHTT++yyVxEc4ouPUVhB35Ojb0Vz
tBXBV7Vw7p1f6H52PWV7DRXB1uYjZsbfZMhzLyQsxkwR3I10vjy1ToYiutOJ
1TaK4M5LQ4cfm2R4z7Ol5Z6LImA2Plr8Y4sMFV7e07f0VASbN39eer+Nvoc2
oVbnzyuCEzFvyj/QUeDbqJBx7RBFoKu+172WgQJ9hWiD/hGKIC6pK6qNiQLX
r5yoto1XBCamsQIdLBQ41zOhznFbESS8GtlVyEaBHdf/zKpmKAKNUccH5RwU
2P69I3L9sSI4WXIxOZ2LAqdMHGX2FCmCv6SyX4E8FNhkTfyh/UIRcLQKv7vE
R4EHFx/tX6hVBPedxUSdBChQaMz0CEezIrj91GzQQ4gCpQI9owc7Uf+WD+jO
iFBgwwzF4sKAIvhWFPfcQIwCe895PPIbUwSGNY+azCRQvqONzcKfFYF42NGj
u6Uo8FLRPkb8N0Xge2+XLZsMBSbEa3Oy/VQE8t67WjllKdBs94XFOxuI79zr
ku9yFPiqwehmJD0e7MhF060pUOB5P2kCFwceyHF97icrUqAeD8bIIIAHmL2n
EFGJAmvDOcbeiuNBqzV/R7MKBeLpd3hU5PHAZMtlMV+NAvlsxtqXVPBAy3Ug
4cVuCtTymIq23Y8HjyR9Uiv3UmCyMT13JAEPYpIzRVI0KHBscuYcpyEefKhc
Zc3SpECNybIj6hZ4kHdjIfi/A4hfZ8anSls8mMWY7V20KRBXFyX31xnle2r5
xFWXApe4FSMG3fHg/SE1LwgokNARWcnmiwe+t3QyzQ9RYEixpEdzIB5EHvQ+
bAFR/3nCuZqX8YD33m43ZQPUb8rQIHsUHnAXyn/fY0SBuxeDp2wS8CDR9+Wy
gAkFVu++I7d+Cw8u0vy9dh1B/b6sVWJMx4PBaouj8uYUGPtztKjpAR5UEFpf
MFhSoL19nN74EzxYv+QVyXmUAm0KdHMMivDo+/r0zU9rCnT/EZvPUoYHdGX0
0X02FMjAIaJ/+SUelD6/XTxkR4G5OoITEnV4MOxSbVF7nAILLfAsEg14cK6R
xaXVkQK7TyewarXiQVjUVXKbMwVyTyUfp3bgAf3yjfG8E6j/Vb7EL+/w4LfY
G8Pnpyjw3IU1jNSLB37LmYp3TlNg0PavU2qDeOCicvu/c+4UyPZK9CzTMB68
FKw08PdEeminF+WO4sGNSr9r1mfR/CVsT9wbw4N3dE4qzt5oH094v5KdQPow
kqygLwV+95jRoiOhfThzbVrqPAU+LI7qO4Lw2cu2c/J+FBhw7enZKeR//VCj
L0sABZ4264kYGccDwTpHe4EgCnyG039E+4gHYnf4qoWCKdCzN+4L3wiar+jZ
5F8hFBh+iFnzIeKbdHx6cCsU1b93MIT8HvVnRJc6eZkCPzOnSwR34gE5BXQ0
hVNg8RX+N4pIH/XUAq83ERQoU3P1oHw9Hvwxenat8D8KfHOh4Ex4JR4cKPnI
XHmNAn8FnWCuK8SDr/7K9C9jKNBu0fp5KZqn6JRA2N04CqyxOaLAehsPqrnV
nO4nUGCkVkbCi//woPcb+eXVGxQ4ccd8pN4fD9wUKmIcEinw/RfjS2Gn8OAU
X0Wj8y3UT9K3D71H8GCswixE9zYFuhEZzj9G76GZgS/D8C4FjvA/Yg5A7wnH
dnGfSioFSrzv2F+7owjoLyzrs6RTYJLSw0qbKUVgEZPXyJlBgcdVT00wtisC
fou56h/30XtzdL9w7KkiMHrrLrKZhfape4/TfKQiWHjye+HPQwr0O7VOFTyu
CETUlSEpmwIzKOGzDGqKoOTC9a3JHAok3mfK5Ef3vsE1SrMrF+3fMdUDS93o
+1V+n/Y0nwJNeAp9ArJwQK+S/PtZAdLXcFK+3hUHKr0aEhOLKLBi0TRWVAEH
7va9u5FejPS7zKwsR1MAM/d+b6aXoH4k9hkSMxVAA3fz14tlFHiF/f1si40C
+Kv7Sv/KCwoMfvn1dfu2PGgQMxI8VUmBs6oTjfbl8mCmZMfWt4oC04P3XAk/
Jg8SH5KZL7yiwK2grGPeC3KgRM9e07KWAvd1Kn05jf4fHUz7/d7+NboXV342
fZKSAwYPD3zSJaL73NbSnIP+37bvpPuKNFDgJ9qF/Hg9WVAlJusq2USBatrX
/0SE7AIyUyY9f5vRfLb/jrRelAGrng8K2drQ/lFiX21aSANjyL3K3k6B9e1G
+s7iUkCgT6JptoMCOZTMTxAWJIAln+PKYicFMuIMrN/eFweMzGr5w+/Q/cn9
6nfPVAxoOsm+rehB91OQiUq/IAL6Thk5VvdSoHfoVaXEM8LgqxCd+71+9J6+
dPlFTwqCC9FzI48HKZAz60fSmroACMgJ6IgfokBTJ57V6Wg+8E1cUNVzhAIH
Rr05h+9xg36z6U2fj+j7ZqpgY1vFDrRUbU0sx9F8cfFnPWaZAVPz3B9HEprH
Ilvqoxx6YPWyQMmFgu5BvV/Y66BNgoDj+nsdGrqnu1xNmid/EoxehFP1P1Pg
zeagLJfgT4SV1/fO4b9QoP7DJdFn1VVESbmBcwzTaF4n9m/khk0TX+jpjrJ8
pcAUkXdqMnGrxBYOvYbZWQo8tZZ0oGx1h3go2Y9nZY4C75yhZZ8iMWP7LzSO
rHxH9XEm//GMc2KFW89EPvygQOX3VWX+g3xYnEHLm7ElxIfnoYErvxD2SSd4
rmEZfS/WfL8taolixV9s/3v3C/ExtPHwrJfAZudtE96vUaD6k5NbU5Yy2LOi
eZbydQp0EEnuNabKYoNC1b9qNimwPzG4vrpbHgs/IHQqe4sC5U2V+7ACHPag
OkMnfBvdu/mNZUosHsNNG8dE0VHhJU+73elZytied7eNPBiokMVzRaQ3SxV7
6s4U7MdEhX2ndurthtSxFIdHwgEsVDg8Xiq8LbAX29rq2X+UjQqTCzrTZ7L3
YUNOqg3HOahQ+UmsDUe/BqbsJd+sy0WFrmsejz6s7MdW+wnawjxU2Fh+VO24
uBa2+0e0pDgfFa49TTdcO30Am2pyD9/kp8L2OvzXoIyDGItRgBGTEBV6mr8z
k1zQxnJx2bFMIlQYRfLee8tEF6t/fQZMilIhE2b8+HsyATtE5+I+K06FdDhS
6e01gMHNr9s9klS4KminzWt9CCt7VsA+Jk2FLgf8P6Z1HcZSq2ISJ3ZRYT25
IE1VTh9bDVyPJcpR4amEMAa6YX2s/VP2bJsCFX5bFPDPyzLA+JlIncWKVNhV
KP7rmZ0h9jFeVypBiQpFDtUu7+U0wtjqO8iJKlToy3xns2DECKt7Mi/ip0aF
WusNSbfvGWODurAxbDcVXuAsz7roZYKd0ageu7yXCu1ePdF21DLFLpFa/B01
qNBc43xN65optqSzFeCqSYXrc2Yzm91HsDmzwW8GB6gwQnHlt0aaGeZa+3Zc
SpsKBW46fnNyNMfAx28HZHWpsGyQ5fSimgWWWVLESQ+oMHhjo6huxQI7rZF6
lOMQFT57eGrw4XtLrOC8MPvPw1Soe7GfZ3+mFeZJT9Tt06fCYxIn0kpcj2K3
LJNHhwypcK7RIDpJyxrbb7b+vdYY6bdwcfvyljVmsp4a2GZKRe8hgrpv+Bg2
wGzl026G+tOOHvGwt8HGO56MPbWgwkfg+7Efr2ywo7pytaVWVFgeNcY1Jm2L
6bvpcadaU+HyLTsfUpQtVjp5edzPhgqbgp6UrpNtsRjxz/wX7ahQJrd4e9TA
DhthmHpjd5wK+ZxCzpfl2GEZT4QmTzmieXM1sLbS22O9D7xCXZ2pMPJr9107
D3ssztQmFpxA/RbLNfS/tscKinz/GJyiwsUK8YUO4eOYcb3ED8XTVNhSyvbg
8fnj2LFrm1b73amQ95nOW+v249iH/E3ZA55U+MkmyGdd3AEbunIvQPgsFYpb
Mu7P83HA9BlOKct4U+GKz/MavXoHTO1w40kmX7SPzoGGUwyO2J2Ph5k+n6NC
vy9Mdx6bOWKncD/EZi5QoT3MFDiV6og9V9B+1uVPhS/d/BIDPjhiHqPleUOB
yK6grtcp7ISlzhjzj1ykwoR3ZkPpx50w+Dx0szqECmPbqrgkkp0wl11I9FAq
3EetOTfV7oT9PPJeJvcyFarKm/Q/XnPC6PumPCPCUX8WGeYHcM5YJKua4LUI
Kry8+HBUwM4ZC1vhOOT+H9LbtifAL9wZI6WJDZ27RoVbnxq9DHOdsaap5kmb
GCqU6vuhOdnijInfu+GzJ44KC3/t1T9HccY+rUU6ayVQ4a+vdv1B686YIhfX
G9EbVLh9qGB9ldsFGxnueqCQSIU3RXGHD8i5YH83C6cVb1HhkO3pR6t7XbCC
IalS5tvonqy9LKMjuGC1bq1k7rtofgKR40P6Lphpzs6NlRQ0bwOqtYeRC2ZN
OF3cn0aFeuJJJ60NXbC2xDmt4XtU+KrjWqXiIRfs1S0+UHufCtUsf3U/0HLB
+A3OlrdkIf48MvstlVywGfuxe60PqdAotq5YTcQFI4jPrD7JpkLZwBrTbAYX
bCNV7k1RDhWOXlIfuf7NGTvYuMZ+K5cKH/xM877e54zNm3zv8MqnQhtJ4wNN
lc4YVyzvD98CKvxedRh7m+yMlQa9v2teRIVJD0tKSD7OWI1A3WO7YvS+/1Or
OKznjB32AYq6JVR4PehJhi6fMwbFP8mJlFHhLO71be5JJ6w0qipJ8gW6N59S
HF6UOWEZ92X8tyuo0KDObT/tshM27/EaY69C+0WvuxQOnLD6pOBrnK+o8OHn
bWuRv44Ys/fbhrka1M8S51/dFkes4dcR7+U61I/ag7igCEds+cCZxI/1qH/5
t2uvdByx3OEcuWqMCgNwc1Jsqw5YPZ4NX9eI7kXvU5v9zx0wGzXOgqxmKrT+
wX/L3N0Bs/8C7uS3UmFOra40J68D1reevJD/hgq/PPyovrvxONbZcvltdAcV
quzdN8IbeBxT00vhvNFJhW3k3qu3xI5jPOcNu8+/Q/tBtFMnvLXHTlnKr4b1
oPe1CMLCLthj8knyGeG9VHiwWefDDJ895h3R8MKlnwpTxa8+OozZYSKy8Vqe
g1RYXURUA652mPHlaU2zISq8L/pHL5rJDptT8ynGjVBhkaBuL1Zmi/1JF0lU
+UiFeNvehQ4rW+zWC7cvnONU6LbXUO/psg12PXL0uQgJfX8KWJ4FpdhgG8/8
p0UpaN9cuHiK9tpgcwk5D9eoVHh2yizUpOQYdkT0L/b3ExWaHQymVk5bY/In
Vx0nJ9G8WvT7FPdYY6Fb3D6NU1RYy8n70OPqUUzT9viXlhn0Xqfq6OrqrLAg
Z63xvFkq1Di1qviMwQoTEzQEpXNUeNjxp4wWtMQOR38TSftOhe48WVYliRYY
2eKlT+APKgznNU54M2aOzXQV4UKX0L4v3bxuImGOBWwcOOm8TIUewK935ZwZ
5kFZ/nvmFxVy1+97+rzsCPZeZkDYe40KD2jKrHf/MsVqBY48M1mnQqHa7UF1
S1OMkzhfcHSTCj97U3GRGSYYVVBVSnOLiv4PYCGCP4wxlZ6bbLzb6PvCXG6H
tzLGaAeEPQTpaNC1WXOH44kRJmQPNFfpaTC85N4FVjoj7JXC3Ys7jDQoM+TH
dMPREHtvy6hIx0KD1gl2PFLVBtiZ/fx2VFYaXLMIbrwobYB5vbWan2KnwaIA
gwStKH1smkt+u4uTBsuSowW5xiE2wKL43wg3DYY57dP48fQwpnna7OIYLw2m
XAq4fyDiECbsy0x7zU+DsgB/I8FPD/NUXHrdKkiDaRaumqNHAbYn4xJXsTAN
VuaRHTLMCFiwp/hIvCgN5s78OnHDWheT+zLPniROg2b9r52lTHUwaxHn136S
NHj2aA/rOwdtbGbr54fL0jTIxk6Xe9r5ILamX+YZvosG9Rynoqq8D2AJ2nR+
znI0mP82+nvOLS3s2ueYz24KNDhwpo1xrUATWz/0eMBYkQbjXtbpCQ/vx779
HtOSVaJBS9ELgvbc+zETL0NmnAoNShFYZZ31NLBdCSbHmNWQfucTzqdc24ed
dQ5j5t1Ng7P/TdAbhezF5BI79/HupUGxMP9W9q3dmKtf1cj3fTQ4088VNfdc
HWNi7JlZ3k+DfkrM9p+OqGGqVv9dHNWiQWN4XUmNXRXDzFx9Jw/SoEhhKuls
gzLWnu86PKVDg6/MzwerxyphlhW/69sJNPh+4vSzLR88diiwmbNXjwbf/oq+
V2+giL34LPux6jANLpl7yzfq4rDMl/mid/WRfk5WuB59BWxey6493ZAG41sS
yNcOyWNN5x/NhRrToNbX6UFfBzlsy17gv2hTGqSSaKEnzspiVQ+fx8eY0SDT
0eA+PqZd2Ez6BLO7BdI/96XqSKA0lqCvu+JtRYPLsfhvV95LYk+faJywtEb5
FE+fPekogemesjiIt6HBfT59Xp6/xTDC+5QoFTsaVC4SiXl+SxQj/gjS5zhO
g0JE/ozPR0SwwvaoAEFHGjxVzcptuSGE8RzFi2w60WBDRMlmR78gtrj/x/6P
LjS4Luixea9eAAPvv2DkkzS4x3XopPdDfoxFLKSp2ZUGp/pp02mP+DA90X27
e9z+6cvw+KYqLzYXws3f60GD5MEKE39Dbkw0Lj6g7AwNBmmkmOmlcWIVJio6
r7xo8OYT7biBEXasg+gT8cCHBpOvhV9tsmLD7G+/1Qw9h/bbd4SZncaCWQna
O4dfQHpsMgke92HG2i3D1074o/w+jeRXkkzYM+1eOq9AGvxV9pJE38WAMcQY
RHtdRP0K8V97fJseI0ceCzcKQfty4I39iyt0mJz6Lap5KA1Gx92OSyRuE6du
uzfuvkyDdP4tUoOdW0SBp2fYCOE06Mu9Z+t79ybxtfCNLr0INO9joQrZq+tE
CsGYQfo/xC+5ryXO5TfRX3BvseI1GtT5+UHCp2aVGJFT3ckZg+yzB11XjH8R
6W84n5qNRdj4jO380jJxRV7NdSEe5dPOv3L3/k/imYuZH/uv02CxUdFZd58l
4uEQjaaJmzT4Kft36aL3D2Lqh3lxchKab/3fre8a34lnpuAiMRm9Z1NqmrXx
HDH3eeu+tjvIHlnlduHYLPGkHGW+KAXlL674ceLhDPHOmphUbBoN2igFhn1l
mybuvhb7OuEe4vNi39nxi1+IFsSEPu/7KD5qScCOd5L4objWJigL3Yc/AuwL
xZ+I4+YxVk4PEe7L+uM8SSU6m/k1amUj/QbW6q8+IxMNN+MfEnJosCUr3m/A
e4JYclr7p3Qusg9SJWWCx4hRYaKvVPJpUP+U+t5P4aPE7nnR72oFyD9+x06x
Yph4T7DqMWcRyn+lxeS+3BDx3Y9wTLAYxePZ7sSnDhL/iyTZbTxHerzfmw+1
B4jPfVzdRkpRfCzdnhO/e4n6LNxj4+UIu/yNKYrsITo4OXZjFQhrb5w3dX5H
HD3Zq/z2JcKTPfi4/Z3E/sazW2+r//HjF/yo30E0/ZBhXliD5n/mGn1e+hui
8sNfDGV1yN9UMjZvupWYKLRwIKUe+Vf8fX8kpIXoYCg4ko0hfwd9v0GGJuKD
XpdvTxoRvllPjPLBiCc5CZejmxH+MUFpU6knJm4duZjYiuKTNOJUFmqJB3IX
pwLfIMxU/SWZvoboklfXa9WBcCxn5o5xNXHWoVzerhPFy9x/lZn4krjWoPdT
6x3CJb68ydyVxMCPG2r6PQgrvTrhqlROdD/2kWTQi3Cy0oOl6BJif7g1s1w/
winZ50P1ioklTisPlQcR9rAWL/1TSGSc1SjhHvqXj0FqgqeAuLlr8rjwP6zF
1+zFWkBcdkrbkfqHI0M3V3aeEj91Lh9X/4fP/Two9vMpseFZ9Y7FP2x5puLa
0FPiJZ8DDjf/4Uc5U++ynhKnZnToGIcRHr+Wa6L4lEiS+VbC8Q8HhtfIyzwl
fnB84CDwD1NSzBhEnxJb3m6UyP3Ds5+nu9ieErOLiA76//DR+zMh3/OJDt56
pf/9w2YuR/Vf5ROtcr47JPzDAXunjMvzicaj2XS3/2Fuj++WRfnE/aZ/HbL/
YfjiqEdWPpEH30SH/cOMk4eeR+YTmU8HlLb9w/Nx5q2h+cStDBnH7n/Y4WAL
KSCfOMd8rXT8H04pnRf1yCd+PrTX8fM/7EXN0T2RTxwLpdF9+4fb6Imu9vnE
/vK7pUv/r2etF2+VT3w7DR3X/+HiLVy5ST7xf7vxrzU=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$126757#1"]& ]}}, {}}, {
     Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, 
        RGBColor[0.5, 0, 0.5]}, ImageSize -> 910, PlotLabel -> FormBox[
        PaneBox["\"\"", Alignment -> Center], TraditionalForm], FrameLabel -> {
        FormBox["\"  \"", TraditionalForm], 
        FormBox["\"  \"", TraditionalForm]}, Axes -> False, DisplayFunction -> 
      Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0.3633668316630884, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {
        FormBox["\"\"", TraditionalForm], 
        FormBox["\"Arbitrary Units\"", TraditionalForm]}, 
      AxesOrigin -> {0.3633668316630884, 0}, 
      BaseStyle -> {FontFamily -> "Arial", FontSize -> 16, 
        GrayLevel[0]}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0.3633668316630884, 
       0.4973736613779425}, {-8.358892876157485*^-23, 
       9.453253483888813*^-24}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{"\"Derivative of Gaussian convolved piecewise model\""}, 
       "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", FontSize -> 16, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                  RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                   False]}], "]"}], "}"}], ",", 
            RowBox[{"{", #, "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"]}, {
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.7987412499350357`*^9, 3.798741469649734*^9, {3.798741849365947*^9, 
   3.798741860398584*^9}, 3.7987448369998713`*^9, 3.798744972765979*^9, 
   3.798745136977157*^9, {3.798745371709313*^9, 3.7987454318558073`*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"f78e1efe-4ddf-45d7-bf6a-fdb8b4320cf9"]
}, Open  ]]
},
WindowSize->{1174, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 177, 3, 30, "Input",ExpressionUUID->"14b80fc0-b034-4458-afec-bce5e94a86f8"],
Cell[738, 25, 1203, 28, 52, "Input",ExpressionUUID->"7d11db7f-b6ad-428f-9f53-e0e508d5667c"],
Cell[1944, 55, 469, 8, 35, "Text",ExpressionUUID->"3c7f0a2f-9122-42dd-8272-103642952e78"],
Cell[2416, 65, 745, 15, 40, "Input",ExpressionUUID->"60aea46b-e92d-4083-8b75-e18d48187343"],
Cell[3164, 82, 705, 15, 40, "Input",ExpressionUUID->"d05e36df-1241-4ecf-8641-ce73878fd250"],
Cell[3872, 99, 401, 10, 32, "Input",ExpressionUUID->"12d31311-9f97-4f75-b440-1e6bb74aa097"],
Cell[4276, 111, 281, 7, 35, "Text",ExpressionUUID->"8b891f59-8681-499f-a4c2-d95a31786cc0"],
Cell[4560, 120, 519, 11, 32, "Input",ExpressionUUID->"2ff07130-5fd0-4de0-bbd3-75c5e19908bb"],
Cell[5082, 133, 355, 8, 35, "Text",ExpressionUUID->"35a3d70b-9eb8-4953-bfc3-72a140254d52"],
Cell[5440, 143, 720, 20, 54, "Input",ExpressionUUID->"dc38e9de-082a-4031-a12d-17b1d8209daf"],
Cell[6163, 165, 175, 3, 35, "Text",ExpressionUUID->"96517e29-e608-41c6-89ce-b7e68194294d"],
Cell[6341, 170, 233, 6, 30, "Input",ExpressionUUID->"3767eb66-6917-4149-acd4-ba38022872e1"],
Cell[6577, 178, 199, 3, 35, "Text",ExpressionUUID->"93b9d66d-ce1f-4f50-bf64-6ccfc1e72aec"],
Cell[6779, 183, 914, 23, 50, "Input",ExpressionUUID->"dd52f0fa-6375-4331-b49a-bd38070e35a0"],
Cell[7696, 208, 385, 11, 43, "Text",ExpressionUUID->"896c0ed1-2764-42be-a37c-90948b32a55c"],
Cell[8084, 221, 1373, 35, 90, "Input",ExpressionUUID->"ba9f2aa0-7b6d-44ce-bc65-ccb6ce98c847"],
Cell[9460, 258, 531, 10, 58, "Text",ExpressionUUID->"3b5ddf0f-69f3-4d52-8c2b-1eee5e25d10a"],
Cell[9994, 270, 1277, 28, 39, "Input",ExpressionUUID->"6d7a6572-fa70-47b9-b0cc-37223f104b63"],
Cell[CellGroupData[{
Cell[11296, 302, 387, 9, 30, "Input",ExpressionUUID->"73f25114-9860-4d61-bd6d-809b2bbb6235"],
Cell[11686, 313, 403, 6, 34, "Output",ExpressionUUID->"004af7dd-f650-487b-9f42-a076e9d038cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12126, 324, 538, 11, 30, "Input",ExpressionUUID->"bd902d78-a6aa-4f9c-80eb-d8865e6ef882"],
Cell[12667, 337, 672, 11, 34, "Output",ExpressionUUID->"ff844b86-9b1d-41b2-9c06-a87c5709b79e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13376, 353, 445, 10, 30, "Input",ExpressionUUID->"786795dd-5155-49c6-962d-70fe36ee21ad"],
Cell[13824, 365, 596, 9, 34, "Output",ExpressionUUID->"de23d42a-c956-42cc-b93f-6b112522288a"]
}, Open  ]],
Cell[14435, 377, 235, 6, 35, "Text",ExpressionUUID->"51425333-8dec-4c73-b9d9-c98989a4db3d"],
Cell[14673, 385, 1748, 47, 49, "Input",ExpressionUUID->"41b8c10c-1920-4d68-afe0-8ff8b76d0eef"],
Cell[16424, 434, 274, 6, 35, "Text",ExpressionUUID->"54d419b6-06e8-46df-8035-b0d26177310c"],
Cell[16701, 442, 417, 10, 30, "Input",ExpressionUUID->"c7688aea-25e5-48f3-8a3a-389455252381"],
Cell[CellGroupData[{
Cell[17143, 456, 518, 13, 30, "Input",ExpressionUUID->"14dcea33-8d92-4647-bac2-020216051aa9"],
Cell[17664, 471, 794, 15, 37, "Output",ExpressionUUID->"5e98bee3-6560-4a74-9b81-1d0d4af71671"]
}, Open  ]],
Cell[18473, 489, 329, 6, 36, "Text",ExpressionUUID->"0fe773d5-85de-4b42-9e2e-59e601453d8f"],
Cell[18805, 497, 449, 9, 58, "Text",ExpressionUUID->"f9ee643b-859a-46d3-ae57-6a3b52a0e06c"],
Cell[CellGroupData[{
Cell[19279, 510, 304, 8, 30, "Input",ExpressionUUID->"3ff5fc9f-0967-4457-86f3-ca44c0d7f50c"],
Cell[19586, 520, 631, 16, 72, "Output",ExpressionUUID->"3b45937a-916c-48ff-8e65-8a99560baf83"]
}, Open  ]],
Cell[20232, 539, 350, 10, 30, "Input",ExpressionUUID->"96d00a70-07bd-4c81-9e15-dac49fa002b7"],
Cell[CellGroupData[{
Cell[20607, 553, 480, 13, 30, "Input",ExpressionUUID->"c8105dee-9c4f-4ad5-93f1-9210cc240b3b"],
Cell[21090, 568, 1953, 56, 65, "Output",ExpressionUUID->"fc793484-ca93-4c52-a267-9eafb505c24e"]
}, Open  ]],
Cell[23058, 627, 328, 7, 35, "Text",ExpressionUUID->"f9389817-4d30-462e-8dcc-d5e255d3c1d4"],
Cell[CellGroupData[{
Cell[23411, 638, 1409, 32, 52, "Input",ExpressionUUID->"807e5bde-8795-4c00-af0e-2954dd4d6e03"],
Cell[24823, 672, 13639, 269, 380, "Output",ExpressionUUID->"ffdf0379-27dd-43ba-af9b-966c1db24aa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38499, 946, 1753, 41, 73, "Input",ExpressionUUID->"4a431f41-6448-46e0-aa8a-6c790f917a1c"],
Cell[40255, 989, 27753, 494, 370, "Output",ExpressionUUID->"9aadb037-2887-46ec-9155-bf7dca6eaa0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68045, 1488, 2124, 45, 73, "Input",ExpressionUUID->"6961f872-e1c5-475f-ac7a-a21dacacd853"],
Cell[70172, 1535, 29798, 525, 370, "Output",ExpressionUUID->"24645b81-e7c8-40ef-a29b-43454719e4cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100007, 2065, 4185, 106, 257, "Input",ExpressionUUID->"763d2f82-6b48-49db-a144-6e2fb8387849"],
Cell[104195, 2173, 68471, 1228, 600, "Output",ExpressionUUID->"e50135c0-b40f-4ffb-bb85-e41e2f07154b"]
}, Open  ]],
Cell[172681, 3404, 252, 6, 35, "Text",ExpressionUUID->"10ccb401-0b87-448a-a098-125472254859"],
Cell[CellGroupData[{
Cell[172958, 3414, 769, 17, 30, "Input",ExpressionUUID->"bb8bd075-c329-4661-b93c-0d9c25c8ee0b"],
Cell[173730, 3433, 1927, 56, 65, "Output",ExpressionUUID->"ef68e742-72ec-4328-9c5f-a049fe4234dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175694, 3494, 316, 7, 30, "Input",ExpressionUUID->"03628206-2f85-4de7-ac2b-8320a8527d96"],
Cell[176013, 3503, 3047, 89, 223, "Output",ExpressionUUID->"71ff91e1-0a18-4436-b4bc-b1b3543f2f80"]
}, Open  ]],
Cell[179075, 3595, 331, 7, 35, "Text",ExpressionUUID->"e98c394c-c498-48fd-95ef-43dd78c1d801"],
Cell[CellGroupData[{
Cell[179431, 3606, 186, 3, 30, "Input",ExpressionUUID->"8c984721-1abf-4307-b67f-43654e136df8"],
Cell[179620, 3611, 577, 12, 37, "Output",ExpressionUUID->"64eb9e68-857b-4156-9d84-6c09fed3df80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180234, 3628, 531, 13, 33, "Input",ExpressionUUID->"926a022f-71fb-442e-9b18-418c108377f3"],
Cell[180768, 3643, 642, 14, 37, "Output",ExpressionUUID->"8b3dd0c5-1715-4887-a07c-e28921d8e405"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181447, 3662, 2019, 46, 94, "Input",ExpressionUUID->"18de77de-fa39-45b8-bdc2-8405a519752d"],
Cell[183469, 3710, 30398, 535, 380, "Output",ExpressionUUID->"94ff166c-614d-47b0-8a22-01859a1a2404"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213904, 4250, 5277, 122, 259, "Input",ExpressionUUID->"e1dd5927-4e25-4a1e-9ed4-347208732baf"],
Cell[219184, 4374, 68212, 1223, 571, "Output",ExpressionUUID->"4c130259-a14f-4440-aed1-07aea44d3221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287433, 5602, 1811, 39, 73, "Input",ExpressionUUID->"3c890e8e-8b23-4473-acde-313491f97823"],
Cell[289247, 5643, 30971, 545, 592, "Output",ExpressionUUID->"c5d9d4a4-ba35-4c40-bf0d-39e72056d67f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320255, 6193, 294, 7, 30, "Input",ExpressionUUID->"5b15de6c-2d67-4b86-9d73-6a6db1add91d"],
Cell[320552, 6202, 97639, 1743, 592, "Output",ExpressionUUID->"f78e1efe-4ddf-45d7-bf6a-fdb8b4320cf9"]
}, Open  ]]
}
]
*)

